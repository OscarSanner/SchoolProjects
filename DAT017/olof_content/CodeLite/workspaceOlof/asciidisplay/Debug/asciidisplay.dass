
./Debug/asciidisplay.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
#define B_RS 1
 
__attribute__((naked)) __attribute__((section (".start_section")) )
void startup ( void )
{
__asm__ volatile(" LDR R0,=0x2001C000\n");		/* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile(" BL main\n");					/* call main */
20000004:	f000 f9d2 	bl	200003ac <main>
__asm__ volatile(".L1: B .L1\n");				/* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <delay_250ns>:





void delay_250ns(void){
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
	*STK_CTRL = 0;
20000014:	4b0c      	ldr	r3, [pc, #48]	; (20000048 <delay_250ns+0x38>)
20000016:	2200      	movs	r2, #0
20000018:	701a      	strb	r2, [r3, #0]
	*STK_LOAD = 168/4 -1;
2000001a:	4b0c      	ldr	r3, [pc, #48]	; (2000004c <delay_250ns+0x3c>)
2000001c:	2229      	movs	r2, #41	; 0x29
2000001e:	601a      	str	r2, [r3, #0]
	*STK_VAL = 0;
20000020:	4b0b      	ldr	r3, [pc, #44]	; (20000050 <delay_250ns+0x40>)
20000022:	2200      	movs	r2, #0
20000024:	601a      	str	r2, [r3, #0]
	*STK_CTRL = 5;
20000026:	4b08      	ldr	r3, [pc, #32]	; (20000048 <delay_250ns+0x38>)
20000028:	2205      	movs	r2, #5
2000002a:	701a      	strb	r2, [r3, #0]
	while( (*STK_COUNTFLAG & 0x01) != 0){
2000002c:	46c0      	nop			; (mov r8, r8)
2000002e:	4b09      	ldr	r3, [pc, #36]	; (20000054 <delay_250ns+0x44>)
20000030:	781b      	ldrb	r3, [r3, #0]
20000032:	b2db      	uxtb	r3, r3
20000034:	001a      	movs	r2, r3
20000036:	2301      	movs	r3, #1
20000038:	4013      	ands	r3, r2
2000003a:	d1f8      	bne.n	2000002e <delay_250ns+0x1e>
	}
	*STK_CTRL = 0;
2000003c:	4b02      	ldr	r3, [pc, #8]	; (20000048 <delay_250ns+0x38>)
2000003e:	2200      	movs	r2, #0
20000040:	701a      	strb	r2, [r3, #0]
}
20000042:	46c0      	nop			; (mov r8, r8)
20000044:	46bd      	mov	sp, r7
20000046:	bd80      	pop	{r7, pc}
20000048:	e000e010 	and	lr, r0, r0, lsl r0
2000004c:	e000e014 	and	lr, r0, r4, lsl r0
20000050:	e000e018 	and	lr, r0, r8, lsl r0
20000054:	e000e012 	and	lr, r0, r2, lsl r0

20000058 <delay_mikro>:

void delay_mikro(unsigned int us){	
20000058:	b580      	push	{r7, lr}
2000005a:	b084      	sub	sp, #16
2000005c:	af00      	add	r7, sp, #0
2000005e:	6078      	str	r0, [r7, #4]
	#ifdef SIMULATOR 
		us = us/1000;
20000060:	687b      	ldr	r3, [r7, #4]
20000062:	22fa      	movs	r2, #250	; 0xfa
20000064:	0091      	lsls	r1, r2, #2
20000066:	0018      	movs	r0, r3
20000068:	f000 f9e6 	bl	20000438 <__udivsi3>
2000006c:	0003      	movs	r3, r0
2000006e:	607b      	str	r3, [r7, #4]
		us ++;
20000070:	687b      	ldr	r3, [r7, #4]
20000072:	3301      	adds	r3, #1
20000074:	607b      	str	r3, [r7, #4]
	#endif
	for(int i = 0; i < 4*us; i++){
20000076:	2300      	movs	r3, #0
20000078:	60fb      	str	r3, [r7, #12]
2000007a:	e004      	b.n	20000086 <delay_mikro+0x2e>
		delay_250ns();
2000007c:	f7ff ffc8 	bl	20000010 <delay_250ns>
	for(int i = 0; i < 4*us; i++){
20000080:	68fb      	ldr	r3, [r7, #12]
20000082:	3301      	adds	r3, #1
20000084:	60fb      	str	r3, [r7, #12]
20000086:	687b      	ldr	r3, [r7, #4]
20000088:	009a      	lsls	r2, r3, #2
2000008a:	68fb      	ldr	r3, [r7, #12]
2000008c:	429a      	cmp	r2, r3
2000008e:	d8f5      	bhi.n	2000007c <delay_mikro+0x24>
	}
}
20000090:	46c0      	nop			; (mov r8, r8)
20000092:	46c0      	nop			; (mov r8, r8)
20000094:	46bd      	mov	sp, r7
20000096:	b004      	add	sp, #16
20000098:	bd80      	pop	{r7, pc}

2000009a <delay_milli>:

void delay_milli(unsigned int ms){
2000009a:	b580      	push	{r7, lr}
2000009c:	b084      	sub	sp, #16
2000009e:	af00      	add	r7, sp, #0
200000a0:	6078      	str	r0, [r7, #4]
	#ifdef SIMULATOR
		ms = ms/1000;
200000a2:	687b      	ldr	r3, [r7, #4]
200000a4:	22fa      	movs	r2, #250	; 0xfa
200000a6:	0091      	lsls	r1, r2, #2
200000a8:	0018      	movs	r0, r3
200000aa:	f000 f9c5 	bl	20000438 <__udivsi3>
200000ae:	0003      	movs	r3, r0
200000b0:	607b      	str	r3, [r7, #4]
		ms ++;
200000b2:	687b      	ldr	r3, [r7, #4]
200000b4:	3301      	adds	r3, #1
200000b6:	607b      	str	r3, [r7, #4]
	#endif
	for(int i = 0; i < ms; i++){
200000b8:	2300      	movs	r3, #0
200000ba:	60fb      	str	r3, [r7, #12]
200000bc:	e007      	b.n	200000ce <delay_milli+0x34>
		delay_mikro(1000);
200000be:	23fa      	movs	r3, #250	; 0xfa
200000c0:	009b      	lsls	r3, r3, #2
200000c2:	0018      	movs	r0, r3
200000c4:	f7ff ffc8 	bl	20000058 <delay_mikro>
	for(int i = 0; i < ms; i++){
200000c8:	68fb      	ldr	r3, [r7, #12]
200000ca:	3301      	adds	r3, #1
200000cc:	60fb      	str	r3, [r7, #12]
200000ce:	68fb      	ldr	r3, [r7, #12]
200000d0:	687a      	ldr	r2, [r7, #4]
200000d2:	429a      	cmp	r2, r3
200000d4:	d8f3      	bhi.n	200000be <delay_milli+0x24>
	}
}
200000d6:	46c0      	nop			; (mov r8, r8)
200000d8:	46c0      	nop			; (mov r8, r8)
200000da:	46bd      	mov	sp, r7
200000dc:	b004      	add	sp, #16
200000de:	bd80      	pop	{r7, pc}

200000e0 <ascii_ctrl_bit_set>:




void ascii_ctrl_bit_set (unsigned char x) {
200000e0:	b580      	push	{r7, lr}
200000e2:	b082      	sub	sp, #8
200000e4:	af00      	add	r7, sp, #0
200000e6:	0002      	movs	r2, r0
200000e8:	1dfb      	adds	r3, r7, #7
200000ea:	701a      	strb	r2, [r3, #0]
	* portOdrLow |= x | B_SELECT;
200000ec:	4b07      	ldr	r3, [pc, #28]	; (2000010c <ascii_ctrl_bit_set+0x2c>)
200000ee:	781b      	ldrb	r3, [r3, #0]
200000f0:	b2da      	uxtb	r2, r3
200000f2:	1dfb      	adds	r3, r7, #7
200000f4:	781b      	ldrb	r3, [r3, #0]
200000f6:	4313      	orrs	r3, r2
200000f8:	b2db      	uxtb	r3, r3
200000fa:	4a04      	ldr	r2, [pc, #16]	; (2000010c <ascii_ctrl_bit_set+0x2c>)
200000fc:	2104      	movs	r1, #4
200000fe:	430b      	orrs	r3, r1
20000100:	b2db      	uxtb	r3, r3
20000102:	7013      	strb	r3, [r2, #0]
}
20000104:	46c0      	nop			; (mov r8, r8)
20000106:	46bd      	mov	sp, r7
20000108:	b002      	add	sp, #8
2000010a:	bd80      	pop	{r7, pc}
2000010c:	40021014 	andmi	r1, r2, r4, lsl r0

20000110 <ascii_ctrl_bit_clear>:

void ascii_ctrl_bit_clear (unsigned char x) {
20000110:	b580      	push	{r7, lr}
20000112:	b084      	sub	sp, #16
20000114:	af00      	add	r7, sp, #0
20000116:	0002      	movs	r2, r0
20000118:	1dfb      	adds	r3, r7, #7
2000011a:	701a      	strb	r2, [r3, #0]
	char notX = ~x;
2000011c:	200f      	movs	r0, #15
2000011e:	183b      	adds	r3, r7, r0
20000120:	1dfa      	adds	r2, r7, #7
20000122:	7812      	ldrb	r2, [r2, #0]
20000124:	43d2      	mvns	r2, r2
20000126:	701a      	strb	r2, [r3, #0]
	* portOdrLow &= notX;
20000128:	4b0a      	ldr	r3, [pc, #40]	; (20000154 <ascii_ctrl_bit_clear+0x44>)
2000012a:	781b      	ldrb	r3, [r3, #0]
2000012c:	b2db      	uxtb	r3, r3
2000012e:	4909      	ldr	r1, [pc, #36]	; (20000154 <ascii_ctrl_bit_clear+0x44>)
20000130:	183a      	adds	r2, r7, r0
20000132:	7812      	ldrb	r2, [r2, #0]
20000134:	4013      	ands	r3, r2
20000136:	b2db      	uxtb	r3, r3
20000138:	700b      	strb	r3, [r1, #0]
	* portOdrLow |= B_SELECT;
2000013a:	4b06      	ldr	r3, [pc, #24]	; (20000154 <ascii_ctrl_bit_clear+0x44>)
2000013c:	781b      	ldrb	r3, [r3, #0]
2000013e:	b2db      	uxtb	r3, r3
20000140:	4a04      	ldr	r2, [pc, #16]	; (20000154 <ascii_ctrl_bit_clear+0x44>)
20000142:	2104      	movs	r1, #4
20000144:	430b      	orrs	r3, r1
20000146:	b2db      	uxtb	r3, r3
20000148:	7013      	strb	r3, [r2, #0]
}
2000014a:	46c0      	nop			; (mov r8, r8)
2000014c:	46bd      	mov	sp, r7
2000014e:	b004      	add	sp, #16
20000150:	bd80      	pop	{r7, pc}
20000152:	46c0      	nop			; (mov r8, r8)
20000154:	40021014 	andmi	r1, r2, r4, lsl r0

20000158 <ascii_write_cmd>:

void ascii_write_cmd (unsigned char command) {
20000158:	b580      	push	{r7, lr}
2000015a:	b082      	sub	sp, #8
2000015c:	af00      	add	r7, sp, #0
2000015e:	0002      	movs	r2, r0
20000160:	1dfb      	adds	r3, r7, #7
20000162:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_clear(B_RS);
20000164:	2001      	movs	r0, #1
20000166:	f7ff ffd3 	bl	20000110 <ascii_ctrl_bit_clear>
	ascii_ctrl_bit_clear(B_RW);
2000016a:	2002      	movs	r0, #2
2000016c:	f7ff ffd0 	bl	20000110 <ascii_ctrl_bit_clear>
	ascii_write_controller(command);
20000170:	1dfb      	adds	r3, r7, #7
20000172:	781b      	ldrb	r3, [r3, #0]
20000174:	0018      	movs	r0, r3
20000176:	f000 f819 	bl	200001ac <ascii_write_controller>
}
2000017a:	46c0      	nop			; (mov r8, r8)
2000017c:	46bd      	mov	sp, r7
2000017e:	b002      	add	sp, #8
20000180:	bd80      	pop	{r7, pc}

20000182 <ascii_write_data>:

void ascii_write_data (unsigned char data) {
20000182:	b580      	push	{r7, lr}
20000184:	b082      	sub	sp, #8
20000186:	af00      	add	r7, sp, #0
20000188:	0002      	movs	r2, r0
2000018a:	1dfb      	adds	r3, r7, #7
2000018c:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_set(B_RS);
2000018e:	2001      	movs	r0, #1
20000190:	f7ff ffa6 	bl	200000e0 <ascii_ctrl_bit_set>
	ascii_ctrl_bit_clear(B_RW);
20000194:	2002      	movs	r0, #2
20000196:	f7ff ffbb 	bl	20000110 <ascii_ctrl_bit_clear>
	ascii_write_controller(data);
2000019a:	1dfb      	adds	r3, r7, #7
2000019c:	781b      	ldrb	r3, [r3, #0]
2000019e:	0018      	movs	r0, r3
200001a0:	f000 f804 	bl	200001ac <ascii_write_controller>
}
200001a4:	46c0      	nop			; (mov r8, r8)
200001a6:	46bd      	mov	sp, r7
200001a8:	b002      	add	sp, #8
200001aa:	bd80      	pop	{r7, pc}

200001ac <ascii_write_controller>:

void ascii_write_controller (unsigned char byte) {
200001ac:	b580      	push	{r7, lr}
200001ae:	b082      	sub	sp, #8
200001b0:	af00      	add	r7, sp, #0
200001b2:	0002      	movs	r2, r0
200001b4:	1dfb      	adds	r3, r7, #7
200001b6:	701a      	strb	r2, [r3, #0]
						//delay_250ns();								// BEHÃ–VS DELAYEN???
	ascii_ctrl_bit_set(B_E);
200001b8:	2040      	movs	r0, #64	; 0x40
200001ba:	f7ff ff91 	bl	200000e0 <ascii_ctrl_bit_set>
	* portOdrHigh = byte;
200001be:	4a06      	ldr	r2, [pc, #24]	; (200001d8 <ascii_write_controller+0x2c>)
200001c0:	1dfb      	adds	r3, r7, #7
200001c2:	781b      	ldrb	r3, [r3, #0]
200001c4:	7013      	strb	r3, [r2, #0]
						//delay_250ns();								// BEHÃ–VS DELAYEN???
	ascii_ctrl_bit_clear(B_E);
200001c6:	2040      	movs	r0, #64	; 0x40
200001c8:	f7ff ffa2 	bl	20000110 <ascii_ctrl_bit_clear>
	delay_250ns();
200001cc:	f7ff ff20 	bl	20000010 <delay_250ns>
}
200001d0:	46c0      	nop			; (mov r8, r8)
200001d2:	46bd      	mov	sp, r7
200001d4:	b002      	add	sp, #8
200001d6:	bd80      	pop	{r7, pc}
200001d8:	40021015 	andmi	r1, r2, r5, lsl r0

200001dc <ascii_read_controller>:

unsigned char ascii_read_controller (void) {
200001dc:	b580      	push	{r7, lr}
200001de:	b082      	sub	sp, #8
200001e0:	af00      	add	r7, sp, #0
	ascii_ctrl_bit_set(B_E);
200001e2:	2040      	movs	r0, #64	; 0x40
200001e4:	f7ff ff7c 	bl	200000e0 <ascii_ctrl_bit_set>
	delay_250ns();
200001e8:	f7ff ff12 	bl	20000010 <delay_250ns>
	delay_250ns();
200001ec:	f7ff ff10 	bl	20000010 <delay_250ns>
	unsigned char returnValue = (* portIdrHigh);		// INDATA 
200001f0:	4a06      	ldr	r2, [pc, #24]	; (2000020c <ascii_read_controller+0x30>)
200001f2:	1dfb      	adds	r3, r7, #7
200001f4:	7812      	ldrb	r2, [r2, #0]
200001f6:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_clear(B_E);
200001f8:	2040      	movs	r0, #64	; 0x40
200001fa:	f7ff ff89 	bl	20000110 <ascii_ctrl_bit_clear>
	return returnValue;
200001fe:	1dfb      	adds	r3, r7, #7
20000200:	781b      	ldrb	r3, [r3, #0]
}
20000202:	0018      	movs	r0, r3
20000204:	46bd      	mov	sp, r7
20000206:	b002      	add	sp, #8
20000208:	bd80      	pop	{r7, pc}
2000020a:	46c0      	nop			; (mov r8, r8)
2000020c:	40021011 	andmi	r1, r2, r1, lsl r0

20000210 <ascii_read_data>:


unsigned char ascii_read_data (void) {
20000210:	b590      	push	{r4, r7, lr}
20000212:	b083      	sub	sp, #12
20000214:	af00      	add	r7, sp, #0
	* portModer = 0x00005555;
20000216:	4b0b      	ldr	r3, [pc, #44]	; (20000244 <ascii_read_data+0x34>)
20000218:	4a0b      	ldr	r2, [pc, #44]	; (20000248 <ascii_read_data+0x38>)
2000021a:	601a      	str	r2, [r3, #0]
	ascii_ctrl_bit_set(B_RS);						//OBS samma som ovan men SÃ„TTER RS hÃ¤r	
2000021c:	2001      	movs	r0, #1
2000021e:	f7ff ff5f 	bl	200000e0 <ascii_ctrl_bit_set>
	ascii_ctrl_bit_set(B_RW);
20000222:	2002      	movs	r0, #2
20000224:	f7ff ff5c 	bl	200000e0 <ascii_ctrl_bit_set>
	unsigned char returnValue = ascii_read_controller();
20000228:	1dfc      	adds	r4, r7, #7
2000022a:	f7ff ffd7 	bl	200001dc <ascii_read_controller>
2000022e:	0003      	movs	r3, r0
20000230:	7023      	strb	r3, [r4, #0]
	* portModer = 0x55555555;
20000232:	4b04      	ldr	r3, [pc, #16]	; (20000244 <ascii_read_data+0x34>)
20000234:	4a05      	ldr	r2, [pc, #20]	; (2000024c <ascii_read_data+0x3c>)
20000236:	601a      	str	r2, [r3, #0]
	return returnValue;
20000238:	1dfb      	adds	r3, r7, #7
2000023a:	781b      	ldrb	r3, [r3, #0]
}
2000023c:	0018      	movs	r0, r3
2000023e:	46bd      	mov	sp, r7
20000240:	b003      	add	sp, #12
20000242:	bd90      	pop	{r4, r7, pc}
20000244:	40021000 	andmi	r1, r2, r0
20000248:	00005555 	andeq	r5, r0, r5, asr r5
2000024c:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20000250 <ascii_read_status>:

unsigned char ascii_read_status (void) {
20000250:	b590      	push	{r4, r7, lr}
20000252:	b083      	sub	sp, #12
20000254:	af00      	add	r7, sp, #0
	* portModer = 0x00005555;
20000256:	4b0b      	ldr	r3, [pc, #44]	; (20000284 <ascii_read_status+0x34>)
20000258:	4a0b      	ldr	r2, [pc, #44]	; (20000288 <ascii_read_status+0x38>)
2000025a:	601a      	str	r2, [r3, #0]
	ascii_ctrl_bit_clear(B_RS);						//OBS samma som ovan men CLEARAR RS hÃ¤r
2000025c:	2001      	movs	r0, #1
2000025e:	f7ff ff57 	bl	20000110 <ascii_ctrl_bit_clear>
	ascii_ctrl_bit_set(B_RW);
20000262:	2002      	movs	r0, #2
20000264:	f7ff ff3c 	bl	200000e0 <ascii_ctrl_bit_set>
	unsigned char returnValue = ascii_read_controller();
20000268:	1dfc      	adds	r4, r7, #7
2000026a:	f7ff ffb7 	bl	200001dc <ascii_read_controller>
2000026e:	0003      	movs	r3, r0
20000270:	7023      	strb	r3, [r4, #0]
	* portModer = 0x55555555;
20000272:	4b04      	ldr	r3, [pc, #16]	; (20000284 <ascii_read_status+0x34>)
20000274:	4a05      	ldr	r2, [pc, #20]	; (2000028c <ascii_read_status+0x3c>)
20000276:	601a      	str	r2, [r3, #0]
	return returnValue;
20000278:	1dfb      	adds	r3, r7, #7
2000027a:	781b      	ldrb	r3, [r3, #0]
}
2000027c:	0018      	movs	r0, r3
2000027e:	46bd      	mov	sp, r7
20000280:	b003      	add	sp, #12
20000282:	bd90      	pop	{r4, r7, pc}
20000284:	40021000 	andmi	r1, r2, r0
20000288:	00005555 	andeq	r5, r0, r5, asr r5
2000028c:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20000290 <ascii_command>:

void ascii_command (unsigned char command) {
20000290:	b580      	push	{r7, lr}
20000292:	b082      	sub	sp, #8
20000294:	af00      	add	r7, sp, #0
20000296:	0002      	movs	r2, r0
20000298:	1dfb      	adds	r3, r7, #7
2000029a:	701a      	strb	r2, [r3, #0]
	while ((ascii_read_status()  & 0x80) == 0x80 ){}
2000029c:	46c0      	nop			; (mov r8, r8)
2000029e:	f7ff ffd7 	bl	20000250 <ascii_read_status>
200002a2:	0003      	movs	r3, r0
200002a4:	001a      	movs	r2, r3
200002a6:	2380      	movs	r3, #128	; 0x80
200002a8:	4013      	ands	r3, r2
200002aa:	2b80      	cmp	r3, #128	; 0x80
200002ac:	d0f7      	beq.n	2000029e <ascii_command+0xe>
	delay_mikro(8);
200002ae:	2008      	movs	r0, #8
200002b0:	f7ff fed2 	bl	20000058 <delay_mikro>
	ascii_write_cmd(command);
200002b4:	1dfb      	adds	r3, r7, #7
200002b6:	781b      	ldrb	r3, [r3, #0]
200002b8:	0018      	movs	r0, r3
200002ba:	f7ff ff4d 	bl	20000158 <ascii_write_cmd>
	delay_milli(2);
200002be:	2002      	movs	r0, #2
200002c0:	f7ff feeb 	bl	2000009a <delay_milli>
}
200002c4:	46c0      	nop			; (mov r8, r8)
200002c6:	46bd      	mov	sp, r7
200002c8:	b002      	add	sp, #8
200002ca:	bd80      	pop	{r7, pc}

200002cc <ascii_init>:

void ascii_init (void) {
200002cc:	b580      	push	{r7, lr}
200002ce:	af00      	add	r7, sp, #0
	ascii_ctrl_bit_clear(B_RS);
200002d0:	2001      	movs	r0, #1
200002d2:	f7ff ff1d 	bl	20000110 <ascii_ctrl_bit_clear>
	ascii_ctrl_bit_clear(B_RW);
200002d6:	2002      	movs	r0, #2
200002d8:	f7ff ff1a 	bl	20000110 <ascii_ctrl_bit_clear>
	ascii_command(0x38);
200002dc:	2038      	movs	r0, #56	; 0x38
200002de:	f7ff ffd7 	bl	20000290 <ascii_command>
	ascii_command(0x0E);
200002e2:	200e      	movs	r0, #14
200002e4:	f7ff ffd4 	bl	20000290 <ascii_command>
	ascii_command(0x01);
200002e8:	2001      	movs	r0, #1
200002ea:	f7ff ffd1 	bl	20000290 <ascii_command>
	ascii_command(0x06);
200002ee:	2006      	movs	r0, #6
200002f0:	f7ff ffce 	bl	20000290 <ascii_command>
}
200002f4:	46c0      	nop			; (mov r8, r8)
200002f6:	46bd      	mov	sp, r7
200002f8:	bd80      	pop	{r7, pc}

200002fa <ascii_gotoxy>:

void ascii_gotoxy (int x, int y) {
200002fa:	b580      	push	{r7, lr}
200002fc:	b084      	sub	sp, #16
200002fe:	af00      	add	r7, sp, #0
20000300:	6078      	str	r0, [r7, #4]
20000302:	6039      	str	r1, [r7, #0]
	ascii_ctrl_bit_clear(B_RS);
20000304:	2001      	movs	r0, #1
20000306:	f7ff ff03 	bl	20000110 <ascii_ctrl_bit_clear>
	ascii_ctrl_bit_clear(B_RW);
2000030a:	2002      	movs	r0, #2
2000030c:	f7ff ff00 	bl	20000110 <ascii_ctrl_bit_clear>
	unsigned char adress = x - 1;
20000310:	687b      	ldr	r3, [r7, #4]
20000312:	b2da      	uxtb	r2, r3
20000314:	210f      	movs	r1, #15
20000316:	187b      	adds	r3, r7, r1
20000318:	3a01      	subs	r2, #1
2000031a:	701a      	strb	r2, [r3, #0]
	if ( y == 2) {
2000031c:	683b      	ldr	r3, [r7, #0]
2000031e:	2b02      	cmp	r3, #2
20000320:	d104      	bne.n	2000032c <ascii_gotoxy+0x32>
		adress += 0x40;
20000322:	187b      	adds	r3, r7, r1
20000324:	187a      	adds	r2, r7, r1
20000326:	7812      	ldrb	r2, [r2, #0]
20000328:	3240      	adds	r2, #64	; 0x40
2000032a:	701a      	strb	r2, [r3, #0]
	}
	ascii_write_cmd(0x80 | adress);
2000032c:	230f      	movs	r3, #15
2000032e:	18fb      	adds	r3, r7, r3
20000330:	781b      	ldrb	r3, [r3, #0]
20000332:	2280      	movs	r2, #128	; 0x80
20000334:	4252      	negs	r2, r2
20000336:	4313      	orrs	r3, r2
20000338:	b2db      	uxtb	r3, r3
2000033a:	0018      	movs	r0, r3
2000033c:	f7ff ff0c 	bl	20000158 <ascii_write_cmd>
}
20000340:	46c0      	nop			; (mov r8, r8)
20000342:	46bd      	mov	sp, r7
20000344:	b004      	add	sp, #16
20000346:	bd80      	pop	{r7, pc}

20000348 <ascii_write_char>:

void ascii_write_char (unsigned char c) {
20000348:	b580      	push	{r7, lr}
2000034a:	b082      	sub	sp, #8
2000034c:	af00      	add	r7, sp, #0
2000034e:	0002      	movs	r2, r0
20000350:	1dfb      	adds	r3, r7, #7
20000352:	701a      	strb	r2, [r3, #0]
	while ((ascii_read_status()  & 0x80) == 0x80 ){}
20000354:	46c0      	nop			; (mov r8, r8)
20000356:	f7ff ff7b 	bl	20000250 <ascii_read_status>
2000035a:	0003      	movs	r3, r0
2000035c:	001a      	movs	r2, r3
2000035e:	2380      	movs	r3, #128	; 0x80
20000360:	4013      	ands	r3, r2
20000362:	2b80      	cmp	r3, #128	; 0x80
20000364:	d0f7      	beq.n	20000356 <ascii_write_char+0xe>
	delay_mikro(8);
20000366:	2008      	movs	r0, #8
20000368:	f7ff fe76 	bl	20000058 <delay_mikro>
	ascii_write_data(c);
2000036c:	1dfb      	adds	r3, r7, #7
2000036e:	781b      	ldrb	r3, [r3, #0]
20000370:	0018      	movs	r0, r3
20000372:	f7ff ff06 	bl	20000182 <ascii_write_data>
	delay_mikro(50);
20000376:	2032      	movs	r0, #50	; 0x32
20000378:	f7ff fe6e 	bl	20000058 <delay_mikro>
}
2000037c:	46c0      	nop			; (mov r8, r8)
2000037e:	46bd      	mov	sp, r7
20000380:	b002      	add	sp, #8
20000382:	bd80      	pop	{r7, pc}

20000384 <init_app>:



void init_app(void){
20000384:	b580      	push	{r7, lr}
20000386:	af00      	add	r7, sp, #0
	#ifdef USBDM
		* ((unsigned long *) 0x40023830) = 0x18;
20000388:	4b05      	ldr	r3, [pc, #20]	; (200003a0 <init_app+0x1c>)
2000038a:	2218      	movs	r2, #24
2000038c:	601a      	str	r2, [r3, #0]
		__asm__ volatile(" LDR R0, =0x08000209\n");
2000038e:	4829      	ldr	r0, [pc, #164]	; (20000434 <main+0x88>)
		__asm__ volatile(" BLX R0 \n");
20000390:	4780      	blx	r0
	#endif
	
	* portModer = 0x55555555;
20000392:	4b04      	ldr	r3, [pc, #16]	; (200003a4 <init_app+0x20>)
20000394:	4a04      	ldr	r2, [pc, #16]	; (200003a8 <init_app+0x24>)
20000396:	601a      	str	r2, [r3, #0]
}
20000398:	46c0      	nop			; (mov r8, r8)
2000039a:	46bd      	mov	sp, r7
2000039c:	bd80      	pop	{r7, pc}
2000039e:	46c0      	nop			; (mov r8, r8)
200003a0:	40023830 	andmi	r3, r2, r0, lsr r8
200003a4:	40021000 	andmi	r1, r2, r0
200003a8:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

200003ac <main>:

void main(void) {
200003ac:	b5b0      	push	{r4, r5, r7, lr}
200003ae:	b08a      	sub	sp, #40	; 0x28
200003b0:	af00      	add	r7, sp, #0
	char *s;
	char test1[] = "Alfanumerisk ";
200003b2:	2414      	movs	r4, #20
200003b4:	193b      	adds	r3, r7, r4
200003b6:	4a1d      	ldr	r2, [pc, #116]	; (2000042c <main+0x80>)
200003b8:	ca23      	ldmia	r2!, {r0, r1, r5}
200003ba:	c323      	stmia	r3!, {r0, r1, r5}
200003bc:	8812      	ldrh	r2, [r2, #0]
200003be:	801a      	strh	r2, [r3, #0]
	char test2[] = "Display - test";
200003c0:	1d3b      	adds	r3, r7, #4
200003c2:	4a1b      	ldr	r2, [pc, #108]	; (20000430 <main+0x84>)
200003c4:	ca23      	ldmia	r2!, {r0, r1, r5}
200003c6:	c323      	stmia	r3!, {r0, r1, r5}
200003c8:	8811      	ldrh	r1, [r2, #0]
200003ca:	8019      	strh	r1, [r3, #0]
200003cc:	7892      	ldrb	r2, [r2, #2]
200003ce:	709a      	strb	r2, [r3, #2]
	
	init_app();
200003d0:	f7ff ffd8 	bl	20000384 <init_app>
	ascii_init();
200003d4:	f7ff ff7a 	bl	200002cc <ascii_init>
	ascii_gotoxy(1,1);
200003d8:	2101      	movs	r1, #1
200003da:	2001      	movs	r0, #1
200003dc:	f7ff ff8d 	bl	200002fa <ascii_gotoxy>
	s = test1;
200003e0:	193b      	adds	r3, r7, r4
200003e2:	627b      	str	r3, [r7, #36]	; 0x24
	while (*s) {
200003e4:	e007      	b.n	200003f6 <main+0x4a>
		ascii_write_char(*s);
200003e6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
200003e8:	781b      	ldrb	r3, [r3, #0]
200003ea:	0018      	movs	r0, r3
200003ec:	f7ff ffac 	bl	20000348 <ascii_write_char>
		s++;
200003f0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
200003f2:	3301      	adds	r3, #1
200003f4:	627b      	str	r3, [r7, #36]	; 0x24
	while (*s) {
200003f6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
200003f8:	781b      	ldrb	r3, [r3, #0]
200003fa:	2b00      	cmp	r3, #0
200003fc:	d1f3      	bne.n	200003e6 <main+0x3a>
	}
	ascii_gotoxy(1,2);
200003fe:	2102      	movs	r1, #2
20000400:	2001      	movs	r0, #1
20000402:	f7ff ff7a 	bl	200002fa <ascii_gotoxy>
	s = test2;
20000406:	1d3b      	adds	r3, r7, #4
20000408:	627b      	str	r3, [r7, #36]	; 0x24
	while (*s) {
2000040a:	e006      	b.n	2000041a <main+0x6e>
		ascii_write_char(*s++);
2000040c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
2000040e:	1c5a      	adds	r2, r3, #1
20000410:	627a      	str	r2, [r7, #36]	; 0x24
20000412:	781b      	ldrb	r3, [r3, #0]
20000414:	0018      	movs	r0, r3
20000416:	f7ff ff97 	bl	20000348 <ascii_write_char>
	while (*s) {
2000041a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
2000041c:	781b      	ldrb	r3, [r3, #0]
2000041e:	2b00      	cmp	r3, #0
20000420:	d1f4      	bne.n	2000040c <main+0x60>
	}
	return 0;
20000422:	46c0      	nop			; (mov r8, r8)
}
20000424:	46bd      	mov	sp, r7
20000426:	b00a      	add	sp, #40	; 0x28
20000428:	bdb0      	pop	{r4, r5, r7, pc}
2000042a:	46c0      	nop			; (mov r8, r8)
2000042c:	20000550 	andcs	r0, r0, r0, asr r5
20000430:	20000560 	andcs	r0, r0, r0, ror #10
20000434:	08000209 	stmdaeq	r0, {r0, r3, r9}

20000438 <__udivsi3>:
20000438:	2200      	movs	r2, #0
2000043a:	0843      	lsrs	r3, r0, #1
2000043c:	428b      	cmp	r3, r1
2000043e:	d374      	bcc.n	2000052a <__udivsi3+0xf2>
20000440:	0903      	lsrs	r3, r0, #4
20000442:	428b      	cmp	r3, r1
20000444:	d35f      	bcc.n	20000506 <__udivsi3+0xce>
20000446:	0a03      	lsrs	r3, r0, #8
20000448:	428b      	cmp	r3, r1
2000044a:	d344      	bcc.n	200004d6 <__udivsi3+0x9e>
2000044c:	0b03      	lsrs	r3, r0, #12
2000044e:	428b      	cmp	r3, r1
20000450:	d328      	bcc.n	200004a4 <__udivsi3+0x6c>
20000452:	0c03      	lsrs	r3, r0, #16
20000454:	428b      	cmp	r3, r1
20000456:	d30d      	bcc.n	20000474 <__udivsi3+0x3c>
20000458:	22ff      	movs	r2, #255	; 0xff
2000045a:	0209      	lsls	r1, r1, #8
2000045c:	ba12      	rev	r2, r2
2000045e:	0c03      	lsrs	r3, r0, #16
20000460:	428b      	cmp	r3, r1
20000462:	d302      	bcc.n	2000046a <__udivsi3+0x32>
20000464:	1212      	asrs	r2, r2, #8
20000466:	0209      	lsls	r1, r1, #8
20000468:	d065      	beq.n	20000536 <__udivsi3+0xfe>
2000046a:	0b03      	lsrs	r3, r0, #12
2000046c:	428b      	cmp	r3, r1
2000046e:	d319      	bcc.n	200004a4 <__udivsi3+0x6c>
20000470:	e000      	b.n	20000474 <__udivsi3+0x3c>
20000472:	0a09      	lsrs	r1, r1, #8
20000474:	0bc3      	lsrs	r3, r0, #15
20000476:	428b      	cmp	r3, r1
20000478:	d301      	bcc.n	2000047e <__udivsi3+0x46>
2000047a:	03cb      	lsls	r3, r1, #15
2000047c:	1ac0      	subs	r0, r0, r3
2000047e:	4152      	adcs	r2, r2
20000480:	0b83      	lsrs	r3, r0, #14
20000482:	428b      	cmp	r3, r1
20000484:	d301      	bcc.n	2000048a <__udivsi3+0x52>
20000486:	038b      	lsls	r3, r1, #14
20000488:	1ac0      	subs	r0, r0, r3
2000048a:	4152      	adcs	r2, r2
2000048c:	0b43      	lsrs	r3, r0, #13
2000048e:	428b      	cmp	r3, r1
20000490:	d301      	bcc.n	20000496 <__udivsi3+0x5e>
20000492:	034b      	lsls	r3, r1, #13
20000494:	1ac0      	subs	r0, r0, r3
20000496:	4152      	adcs	r2, r2
20000498:	0b03      	lsrs	r3, r0, #12
2000049a:	428b      	cmp	r3, r1
2000049c:	d301      	bcc.n	200004a2 <__udivsi3+0x6a>
2000049e:	030b      	lsls	r3, r1, #12
200004a0:	1ac0      	subs	r0, r0, r3
200004a2:	4152      	adcs	r2, r2
200004a4:	0ac3      	lsrs	r3, r0, #11
200004a6:	428b      	cmp	r3, r1
200004a8:	d301      	bcc.n	200004ae <__udivsi3+0x76>
200004aa:	02cb      	lsls	r3, r1, #11
200004ac:	1ac0      	subs	r0, r0, r3
200004ae:	4152      	adcs	r2, r2
200004b0:	0a83      	lsrs	r3, r0, #10
200004b2:	428b      	cmp	r3, r1
200004b4:	d301      	bcc.n	200004ba <__udivsi3+0x82>
200004b6:	028b      	lsls	r3, r1, #10
200004b8:	1ac0      	subs	r0, r0, r3
200004ba:	4152      	adcs	r2, r2
200004bc:	0a43      	lsrs	r3, r0, #9
200004be:	428b      	cmp	r3, r1
200004c0:	d301      	bcc.n	200004c6 <__udivsi3+0x8e>
200004c2:	024b      	lsls	r3, r1, #9
200004c4:	1ac0      	subs	r0, r0, r3
200004c6:	4152      	adcs	r2, r2
200004c8:	0a03      	lsrs	r3, r0, #8
200004ca:	428b      	cmp	r3, r1
200004cc:	d301      	bcc.n	200004d2 <__udivsi3+0x9a>
200004ce:	020b      	lsls	r3, r1, #8
200004d0:	1ac0      	subs	r0, r0, r3
200004d2:	4152      	adcs	r2, r2
200004d4:	d2cd      	bcs.n	20000472 <__udivsi3+0x3a>
200004d6:	09c3      	lsrs	r3, r0, #7
200004d8:	428b      	cmp	r3, r1
200004da:	d301      	bcc.n	200004e0 <__udivsi3+0xa8>
200004dc:	01cb      	lsls	r3, r1, #7
200004de:	1ac0      	subs	r0, r0, r3
200004e0:	4152      	adcs	r2, r2
200004e2:	0983      	lsrs	r3, r0, #6
200004e4:	428b      	cmp	r3, r1
200004e6:	d301      	bcc.n	200004ec <__udivsi3+0xb4>
200004e8:	018b      	lsls	r3, r1, #6
200004ea:	1ac0      	subs	r0, r0, r3
200004ec:	4152      	adcs	r2, r2
200004ee:	0943      	lsrs	r3, r0, #5
200004f0:	428b      	cmp	r3, r1
200004f2:	d301      	bcc.n	200004f8 <__udivsi3+0xc0>
200004f4:	014b      	lsls	r3, r1, #5
200004f6:	1ac0      	subs	r0, r0, r3
200004f8:	4152      	adcs	r2, r2
200004fa:	0903      	lsrs	r3, r0, #4
200004fc:	428b      	cmp	r3, r1
200004fe:	d301      	bcc.n	20000504 <__udivsi3+0xcc>
20000500:	010b      	lsls	r3, r1, #4
20000502:	1ac0      	subs	r0, r0, r3
20000504:	4152      	adcs	r2, r2
20000506:	08c3      	lsrs	r3, r0, #3
20000508:	428b      	cmp	r3, r1
2000050a:	d301      	bcc.n	20000510 <__udivsi3+0xd8>
2000050c:	00cb      	lsls	r3, r1, #3
2000050e:	1ac0      	subs	r0, r0, r3
20000510:	4152      	adcs	r2, r2
20000512:	0883      	lsrs	r3, r0, #2
20000514:	428b      	cmp	r3, r1
20000516:	d301      	bcc.n	2000051c <__udivsi3+0xe4>
20000518:	008b      	lsls	r3, r1, #2
2000051a:	1ac0      	subs	r0, r0, r3
2000051c:	4152      	adcs	r2, r2
2000051e:	0843      	lsrs	r3, r0, #1
20000520:	428b      	cmp	r3, r1
20000522:	d301      	bcc.n	20000528 <__udivsi3+0xf0>
20000524:	004b      	lsls	r3, r1, #1
20000526:	1ac0      	subs	r0, r0, r3
20000528:	4152      	adcs	r2, r2
2000052a:	1a41      	subs	r1, r0, r1
2000052c:	d200      	bcs.n	20000530 <__udivsi3+0xf8>
2000052e:	4601      	mov	r1, r0
20000530:	4152      	adcs	r2, r2
20000532:	4610      	mov	r0, r2
20000534:	4770      	bx	lr
20000536:	e7ff      	b.n	20000538 <__udivsi3+0x100>
20000538:	b501      	push	{r0, lr}
2000053a:	2000      	movs	r0, #0
2000053c:	f000 f806 	bl	2000054c <__aeabi_idiv0>
20000540:	bd02      	pop	{r1, pc}
20000542:	46c0      	nop			; (mov r8, r8)

20000544 <__aeabi_uidivmod>:
20000544:	2900      	cmp	r1, #0
20000546:	d0f7      	beq.n	20000538 <__udivsi3+0x100>
20000548:	e776      	b.n	20000438 <__udivsi3>
2000054a:	4770      	bx	lr

2000054c <__aeabi_idiv0>:
2000054c:	4770      	bx	lr
2000054e:	46c0      	nop			; (mov r8, r8)
20000550:	61666c41 	cmnvs	r6, r1, asr #24
20000554:	656d756e 	strbvs	r7, [sp, #-1390]!	; 0xfffffa92
20000558:	6b736972 	blvs	21cdab28 <__aeabi_idiv0+0x1cda5dc>
2000055c:	00000020 	andeq	r0, r0, r0, lsr #32
20000560:	70736944 	rsbsvc	r6, r3, r4, asr #18
20000564:	2079616c 	rsbscs	r6, r9, ip, ror #2
20000568:	6574202d 	ldrbvs	r2, [r4, #-45]!	; 0xffffffd3
2000056c:	00007473 	andeq	r7, r0, r3, ror r4

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	00000353 	andeq	r0, r0, r3, asr r3
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000066 	andeq	r0, r0, r6, rrx
  10:	0001240c 	andeq	r2, r1, ip, lsl #8
  14:	00021500 	andeq	r1, r2, r0, lsl #10
	...
  24:	01d30200 	bicseq	r0, r3, r0, lsl #4
  28:	b1010000 	mrslt	r0, (UNDEF: 1)
  2c:	0003ac06 	andeq	sl, r3, r6, lsl #24
  30:	00008820 	andeq	r8, r0, r0, lsr #16
  34:	679c0100 	ldrvs	r0, [ip, r0, lsl #2]
  38:	03000000 	movweq	r0, #0
  3c:	b2010073 	andlt	r0, r1, #115	; 0x73
  40:	00006708 	andeq	r6, r0, r8, lsl #14
  44:	6c910200 	lfmvs	f0, 4, [r1], {0}
  48:	0001f904 	andeq	pc, r1, r4, lsl #18
  4c:	07b30100 	ldreq	r0, [r3, r0, lsl #2]!
  50:	00000074 	andeq	r0, r0, r4, ror r0
  54:	045c9102 	ldrbeq	r9, [ip], #-258	; 0xfffffefe
  58:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
  5c:	8b07b401 	blhi	1ed068 <startup-0x1fe12f98>
  60:	02000000 	andeq	r0, r0, #0
  64:	05004c91 	streq	r4, [r0, #-3217]	; 0xfffff36f
  68:	00006d04 	andeq	r6, r0, r4, lsl #26
  6c:	08010600 	stmdaeq	r1, {r9, sl}
  70:	000001ce 	andeq	r0, r0, lr, asr #3
  74:	00006d07 	andeq	r6, r0, r7, lsl #26
  78:	00008400 	andeq	r8, r0, r0, lsl #8
  7c:	00840800 	addeq	r0, r4, r0, lsl #16
  80:	000d0000 	andeq	r0, sp, r0
  84:	19070406 	stmdbne	r7, {r1, r2, sl}
  88:	07000000 	streq	r0, [r0, -r0]
  8c:	0000006d 	andeq	r0, r0, sp, rrx
  90:	0000009b 	muleq	r0, fp, r0
  94:	00008408 	andeq	r8, r0, r8, lsl #8
  98:	09000e00 	stmdbeq	r0, {r9, sl, fp}
  9c:	000001e6 	andeq	r0, r0, r6, ror #3
  a0:	8406a701 	strhi	sl, [r6], #-1793	; 0xfffff8ff
  a4:	28200003 	stmdacs	r0!, {r0, r1}
  a8:	01000000 	mrseq	r0, (UNDEF: 0)
  ac:	0281029c 	addeq	r0, r1, #156, 4	; 0xc0000009
  b0:	9e010000 	cdpls	0, 0, cr0, cr1, cr0, {0}
  b4:	00034806 	andeq	r4, r3, r6, lsl #16
  b8:	00003c20 	andeq	r3, r0, r0, lsr #24
  bc:	d19c0100 	orrsle	r0, ip, r0, lsl #2
  c0:	0a000000 	beq	c8 <startup-0x1fffff38>
  c4:	9e010063 	cdpls	0, 0, cr0, cr1, cr3, {3}
  c8:	0000d126 	andeq	sp, r0, r6, lsr #2
  cc:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
  d0:	08010600 	stmdaeq	r1, {r9, sl}
  d4:	000001c5 	andeq	r0, r0, r5, asr #3
  d8:	00000c02 	andeq	r0, r0, r2, lsl #24
  dc:	06940100 	ldreq	r0, [r4], r0, lsl #2
  e0:	200002fa 	strdcs	r0, [r0], -sl
  e4:	0000004e 	andeq	r0, r0, lr, asr #32
  e8:	01189c01 	tsteq	r8, r1, lsl #24
  ec:	780a0000 	stmdavc	sl, {}	; <UNPREDICTABLE>
  f0:	18940100 	ldmne	r4, {r8}
  f4:	00000118 	andeq	r0, r0, r8, lsl r1
  f8:	0a6c9102 	beq	1b24508 <startup-0x1e4dbaf8>
  fc:	94010079 	strls	r0, [r1], #-121	; 0xffffff87
 100:	0001181f 	andeq	r1, r1, pc, lsl r8
 104:	68910200 	ldmvs	r1, {r9}
 108:	00010504 	andeq	r0, r1, r4, lsl #10
 10c:	10970100 	addsne	r0, r7, r0, lsl #2
 110:	000000d1 	ldrdeq	r0, [r0], -r1
 114:	00779102 	rsbseq	r9, r7, r2, lsl #2
 118:	6905040b 	stmdbvs	r5, {r0, r1, r3, sl}
 11c:	0c00746e 	cfstrseq	mvf7, [r0], {110}	; 0x6e
 120:	000002a5 	andeq	r0, r0, r5, lsr #5
 124:	cc068b01 			; <UNDEFINED> instruction: 0xcc068b01
 128:	2e200002 	cdpcs	0, 2, cr0, cr0, cr2, {0}
 12c:	01000000 	mrseq	r0, (UNDEF: 0)
 130:	01d8029c 			; <UNDEFINED> instruction: 0x01d8029c
 134:	84010000 	strhi	r0, [r1], #-0
 138:	00029006 	andeq	r9, r2, r6
 13c:	00003c20 	andeq	r3, r0, r0, lsr #24
 140:	579c0100 	ldrpl	r0, [ip, r0, lsl #2]
 144:	0d000001 	stceq	0, cr0, [r0, #-4]
 148:	000001de 	ldrdeq	r0, [r0], -lr
 14c:	d1238401 			; <UNDEFINED> instruction: 0xd1238401
 150:	02000000 	andeq	r0, r0, #0
 154:	0e007791 	mcreq	7, 0, r7, cr0, cr1, {4}
 158:	000000e2 	andeq	r0, r0, r2, ror #1
 15c:	d10f7b01 	tstle	pc, r1, lsl #22
 160:	50000000 	andpl	r0, r0, r0
 164:	40200002 	eormi	r0, r0, r2
 168:	01000000 	mrseq	r0, (UNDEF: 0)
 16c:	0001819c 	muleq	r1, ip, r1
 170:	01180400 	tsteq	r8, r0, lsl #8
 174:	7f010000 	svcvc	0x00010000
 178:	0000d110 	andeq	sp, r0, r0, lsl r1
 17c:	6f910200 	svcvs	0x00910200
 180:	01b50e00 			; <UNDEFINED> instruction: 0x01b50e00
 184:	72010000 	andvc	r0, r1, #0
 188:	0000d10f 	andeq	sp, r0, pc, lsl #2
 18c:	00021000 	andeq	r1, r2, r0
 190:	00004020 	andeq	r4, r0, r0, lsr #32
 194:	ab9c0100 	blge	fe70059c <__aeabi_idiv0+0xde700050>
 198:	04000001 	streq	r0, [r0], #-1
 19c:	00000118 	andeq	r0, r0, r8, lsl r1
 1a0:	d1107601 	tstle	r0, r1, lsl #12
 1a4:	02000000 	andeq	r0, r0, #0
 1a8:	0e006f91 	mcreq	15, 0, r6, cr0, cr1, {4}
 1ac:	0000019f 	muleq	r0, pc, r1	; <UNPREDICTABLE>
 1b0:	d10f6801 	tstle	pc, r1, lsl #16
 1b4:	dc000000 	stcle	0, cr0, [r0], {-0}
 1b8:	34200001 	strtcc	r0, [r0], #-1
 1bc:	01000000 	mrseq	r0, (UNDEF: 0)
 1c0:	0001d59c 	muleq	r1, ip, r5
 1c4:	01180400 	tsteq	r8, r0, lsl #8
 1c8:	6c010000 	stcvs	0, cr0, [r1], {-0}
 1cc:	0000d110 	andeq	sp, r0, r0, lsl r1
 1d0:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
 1d4:	00470200 	subeq	r0, r7, r0, lsl #4
 1d8:	5f010000 	svcpl	0x00010000
 1dc:	0001ac06 	andeq	sl, r1, r6, lsl #24
 1e0:	00003020 	andeq	r3, r0, r0, lsr #32
 1e4:	fb9c0100 	blx	fe7005ee <__aeabi_idiv0+0xde7000a2>
 1e8:	0d000001 	stceq	0, cr0, [r0, #-4]
 1ec:	000001ef 	andeq	r0, r0, pc, ror #3
 1f0:	d12c5f01 			; <UNDEFINED> instruction: 0xd12c5f01
 1f4:	02000000 	andeq	r0, r0, #0
 1f8:	02007791 	andeq	r7, r0, #38010880	; 0x2440000
 1fc:	000000f4 	strdeq	r0, [r0], -r4
 200:	82065901 	andhi	r5, r6, #16384	; 0x4000
 204:	2a200001 	bcs	800210 <startup-0x1f7ffdf0>
 208:	01000000 	mrseq	r0, (UNDEF: 0)
 20c:	00022f9c 	muleq	r2, ip, pc	; <UNPREDICTABLE>
 210:	01c00d00 	biceq	r0, r0, r0, lsl #26
 214:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
 218:	0000d126 	andeq	sp, r0, r6, lsr #2
 21c:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
 220:	0000470f 	andeq	r4, r0, pc, lsl #14
 224:	02560100 	subseq	r0, r6, #0, 2
 228:	00000118 	andeq	r0, r0, r8, lsl r1
 22c:	02000010 	andeq	r0, r0, #16
 230:	00000205 	andeq	r0, r0, r5, lsl #4
 234:	58065301 	stmdapl	r6, {r0, r8, r9, ip, lr}
 238:	2a200001 	bcs	800244 <startup-0x1f7ffdbc>
 23c:	01000000 	mrseq	r0, (UNDEF: 0)
 240:	0002639c 	muleq	r2, ip, r3
 244:	01de0d00 	bicseq	r0, lr, r0, lsl #26
 248:	53010000 	movwpl	r0, #4096	; 0x1000
 24c:	0000d125 	andeq	sp, r0, r5, lsr #2
 250:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
 254:	0000470f 	andeq	r4, r0, pc, lsl #14
 258:	02560100 	subseq	r0, r6, #0, 2
 25c:	00000118 	andeq	r0, r0, r8, lsl r1
 260:	11000010 	tstne	r0, r0, lsl r0
 264:	00000026 	andeq	r0, r0, r6, lsr #32
 268:	10064d01 	andne	r4, r6, r1, lsl #26
 26c:	48200001 	stmdami	r0!, {r0}
 270:	01000000 	mrseq	r0, (UNDEF: 0)
 274:	0002969c 	muleq	r2, ip, r6
 278:	00780a00 	rsbseq	r0, r8, r0, lsl #20
 27c:	d12a4d01 			; <UNDEFINED> instruction: 0xd12a4d01
 280:	02000000 	andeq	r0, r0, #0
 284:	f4046f91 			; <UNDEFINED> instruction: 0xf4046f91
 288:	01000001 	tsteq	r0, r1
 28c:	006d074e 	rsbeq	r0, sp, lr, asr #14
 290:	91020000 	mrsls	r0, (UNDEF: 2)
 294:	92110077 	andsls	r0, r1, #119	; 0x77
 298:	01000002 	tsteq	r0, r2
 29c:	00e00649 	rsceq	r0, r0, r9, asr #12
 2a0:	00302000 	eorseq	r2, r0, r0
 2a4:	9c010000 	stcls	0, cr0, [r1], {-0}
 2a8:	000002ba 			; <UNDEFINED> instruction: 0x000002ba
 2ac:	0100780a 	tsteq	r0, sl, lsl #16
 2b0:	00d12849 	sbcseq	r2, r1, r9, asr #16
 2b4:	91020000 	mrsls	r0, (UNDEF: 2)
 2b8:	00020077 	andeq	r0, r2, r7, ror r0
 2bc:	01000000 	mrseq	r0, (UNDEF: 0)
 2c0:	009a063c 	addseq	r0, sl, ip, lsr r6
 2c4:	00462000 	subeq	r2, r6, r0
 2c8:	9c010000 	stcls	0, cr0, [r1], {-0}
 2cc:	000002f6 	strdeq	r0, [r0], -r6
 2d0:	00736d0a 	rsbseq	r6, r3, sl, lsl #26
 2d4:	841f3c01 	ldrhi	r3, [pc], #-3073	; 2dc <startup-0x1ffffd24>
 2d8:	02000000 	andeq	r0, r0, #0
 2dc:	b8126c91 	ldmdalt	r2, {r0, r4, r7, sl, fp, sp, lr}
 2e0:	1e200000 	cdpne	0, 2, cr0, cr0, cr0, {0}
 2e4:	03000000 	movweq	r0, #0
 2e8:	41010069 	tstmi	r1, r9, rrx
 2ec:	0001180a 	andeq	r1, r1, sl, lsl #16
 2f0:	74910200 	ldrvc	r0, [r1], #512	; 0x200
 2f4:	3b020000 	blcc	802fc <startup-0x1ff7fd04>
 2f8:	01000000 	mrseq	r0, (UNDEF: 0)
 2fc:	00580632 	subseq	r0, r8, r2, lsr r6
 300:	00422000 	subeq	r2, r2, r0
 304:	9c010000 	stcls	0, cr0, [r1], {-0}
 308:	00000332 	andeq	r0, r0, r2, lsr r3
 30c:	0073750a 	rsbseq	r7, r3, sl, lsl #10
 310:	841f3201 	ldrhi	r3, [pc], #-513	; 318 <startup-0x1ffffce8>
 314:	02000000 	andeq	r0, r0, #0
 318:	76126c91 			; <UNDEFINED> instruction: 0x76126c91
 31c:	1a200000 	bne	800324 <startup-0x1f7ffcdc>
 320:	03000000 	movweq	r0, #0
 324:	37010069 	strcc	r0, [r1, -r9, rrx]
 328:	0001180a 	andeq	r1, r1, sl, lsl #16
 32c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
 330:	0c090000 	stceq	0, cr0, [r9], {-0}
 334:	01000001 	tsteq	r0, r1
 338:	00100628 	andseq	r0, r0, r8, lsr #12
 33c:	00482000 	subeq	r2, r8, r0
 340:	9c010000 	stcls	0, cr0, [r1], {-0}
 344:	00005e09 	andeq	r5, r0, r9, lsl #28
 348:	061b0100 	ldreq	r0, [fp], -r0, lsl #2
 34c:	20000000 	andcs	r0, r0, r0
 350:	0000000c 	andeq	r0, r0, ip
 354:	Address 0x00000354 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23
  14:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  18:	0b3a0e03 	bleq	e8382c <startup-0x1f17c7d4>
  1c:	0b390b3b 	bleq	e42d10 <startup-0x1f1bd2f0>
  20:	01111927 	tsteq	r1, r7, lsr #18
  24:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  28:	01194296 			; <UNDEFINED> instruction: 0x01194296
  2c:	03000013 	movweq	r0, #19
  30:	08030034 	stmdaeq	r3, {r2, r4, r5}
  34:	0b3b0b3a 	bleq	ec2d24 <startup-0x1f13d2dc>
  38:	13490b39 	movtne	r0, #39737	; 0x9b39
  3c:	00001802 	andeq	r1, r0, r2, lsl #16
  40:	03003404 	movweq	r3, #1028	; 0x404
  44:	3b0b3a0e 	blcc	2ce884 <startup-0x1fd3177c>
  48:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  4c:	00180213 	andseq	r0, r8, r3, lsl r2
  50:	000f0500 	andeq	r0, pc, r0, lsl #10
  54:	13490b0b 	movtne	r0, #39691	; 0x9b0b
  58:	24060000 	strcs	r0, [r6], #-0
  5c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  60:	000e030b 	andeq	r0, lr, fp, lsl #6
  64:	01010700 	tsteq	r1, r0, lsl #14
  68:	13011349 	movwne	r1, #4937	; 0x1349
  6c:	21080000 	mrscs	r0, (UNDEF: 8)
  70:	2f134900 	svccs	0x00134900
  74:	0900000b 	stmdbeq	r0, {r0, r1, r3}
  78:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
  7c:	0b3a0e03 	bleq	e83890 <startup-0x1f17c770>
  80:	0b390b3b 	bleq	e42d74 <startup-0x1f1bd28c>
  84:	01111927 	tsteq	r1, r7, lsr #18
  88:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  8c:	00194297 	mulseq	r9, r7, r2
  90:	00050a00 	andeq	r0, r5, r0, lsl #20
  94:	0b3a0803 	bleq	e820a8 <startup-0x1f17df58>
  98:	0b390b3b 	bleq	e42d8c <startup-0x1f1bd274>
  9c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
  a0:	240b0000 	strcs	r0, [fp], #-0
  a4:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  a8:	0008030b 	andeq	r0, r8, fp, lsl #6
  ac:	002e0c00 	eoreq	r0, lr, r0, lsl #24
  b0:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  b4:	0b3b0b3a 	bleq	ec2da4 <startup-0x1f13d25c>
  b8:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
  bc:	06120111 			; <UNDEFINED> instruction: 0x06120111
  c0:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
  c4:	0d000019 	stceq	0, cr0, [r0, #-100]	; 0xffffff9c
  c8:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
  cc:	0b3b0b3a 	bleq	ec2dbc <startup-0x1f13d244>
  d0:	13490b39 	movtne	r0, #39737	; 0x9b39
  d4:	00001802 	andeq	r1, r0, r2, lsl #16
  d8:	3f012e0e 	svccc	0x00012e0e
  dc:	3a0e0319 	bcc	380d48 <startup-0x1fc7f2b8>
  e0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  e4:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
  e8:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
  ec:	96184006 	ldrls	r4, [r8], -r6
  f0:	13011942 	movwne	r1, #6466	; 0x1942
  f4:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
  f8:	03193f01 	tsteq	r9, #1, 30
  fc:	3b0b3a0e 	blcc	2ce93c <startup-0x1fd316c4>
 100:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 104:	00193c13 	andseq	r3, r9, r3, lsl ip
 108:	00181000 	andseq	r1, r8, r0
 10c:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
 110:	03193f01 	tsteq	r9, #1, 30
 114:	3b0b3a0e 	blcc	2ce954 <startup-0x1fd316ac>
 118:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 11c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 120:	97184006 	ldrls	r4, [r8, -r6]
 124:	13011942 	movwne	r1, #6466	; 0x1942
 128:	0b120000 	bleq	480130 <startup-0x1fb7fed0>
 12c:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
 130:	00000006 	andeq	r0, r0, r6

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	00000424 	andeq	r0, r0, r4, lsr #8
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	20000434 	andcs	r0, r0, r4, lsr r4
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	0000029e 	muleq	r0, lr, r2
   4:	00910003 	addseq	r0, r1, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	43010000 	movwmi	r0, #4096	; 0x1000
  1c:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
  20:	2f737265 	svccs	0x00737265
  24:	6e61736f 	cdpvs	3, 6, cr7, cr1, cr15, {3}
  28:	6f442f6e 	svcvs	0x00442f6e
  2c:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
  30:	2f73746e 	svccs	0x0073746e
  34:	50746947 	rsbspl	r6, r4, r7, asr #18
  38:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
  3c:	2f737463 	svccs	0x00737463
  40:	6f686353 	svcvs	0x00686353
  44:	72506c6f 	subsvc	r6, r0, #28416	; 0x6f00
  48:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
  4c:	442f7374 	strtmi	r7, [pc], #-884	; 54 <startup-0x1fffffac>
  50:	31305441 	teqcc	r0, r1, asr #8
  54:	6c6f2f37 	stclvs	15, cr2, [pc], #-220	; ffffff80 <__aeabi_idiv0+0xdffffa34>
  58:	635f666f 	cmpvs	pc, #116391936	; 0x6f00000
  5c:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
  60:	432f746e 			; <UNDEFINED> instruction: 0x432f746e
  64:	4c65646f 	cfstrdmi	mvd6, [r5], #-444	; 0xfffffe44
  68:	2f657469 	svccs	0x00657469
  6c:	6b726f77 	blvs	1c9be50 <startup-0x1e3641b0>
  70:	63617073 	cmnvs	r1, #115	; 0x73
  74:	6f6c4f65 	svcvs	0x006c4f65
  78:	73612f66 	cmnvc	r1, #408	; 0x198
  7c:	64696963 	strbtvs	r6, [r9], #-2403	; 0xfffff69d
  80:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
  84:	00007961 	andeq	r7, r0, r1, ror #18
  88:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  8c:	73696469 	cmnvc	r9, #1761607680	; 0x69000000
  90:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
  94:	0100632e 	tsteq	r0, lr, lsr #6
  98:	05000000 	streq	r0, [r0, #-0]
  9c:	02050001 	andeq	r0, r5, #1
  a0:	20000000 	andcs	r0, r0, r0
  a4:	13011b03 	movwne	r1, #6915	; 0x1b03
  a8:	212f2121 			; <UNDEFINED> instruction: 0x212f2121
  ac:	01000302 	tsteq	r0, r2, lsl #6
  b0:	00170501 	andseq	r0, r7, r1, lsl #10
  b4:	00100205 	andseq	r0, r0, r5, lsl #4
  b8:	27032000 	strcs	r2, [r3, -r0]
  bc:	2f020501 	svccs	0x00020501
  c0:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
  c4:	0c052f02 	stceq	15, cr2, [r5], {2}
  c8:	2f020520 	svccs	0x00020520
  cc:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
  d0:	0c052f02 	stceq	15, cr2, [r5], {2}
  d4:	2f070520 	svccs	0x00070520
  d8:	02000a05 	andeq	r0, r0, #20480	; 0x5000
  dc:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
  e0:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
  e4:	07053c01 	streq	r3, [r5, -r1, lsl #24]
  e8:	01040200 	mrseq	r0, R12_usr
  ec:	2202053c 	andcs	r0, r2, #60, 10	; 0xf000000
  f0:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
  f4:	22052f01 	andcs	r2, r5, #1, 30
  f8:	4c0605ae 	cfstr32mi	mvfx0, [r6], {174}	; 0xae
  fc:	3e0a0583 	cfsh32cc	mvfx0, mvfx10, #-61
 100:	052e0205 	streq	r0, [lr, #-517]!	; 0xfffffdfb
 104:	04020003 	streq	r0, [r2], #-3
 108:	1c052103 	stfnes	f2, [r5], {3}
 10c:	03040200 	movweq	r0, #16896	; 0x4200
 110:	0016052d 	andseq	r0, r6, sp, lsr #10
 114:	3c010402 	cfstrscc	mvf0, [r1], {2}
 118:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
 11c:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
 120:	04020002 	streq	r0, [r2], #-2
 124:	01052001 	tsteq	r5, r1
 128:	5a220531 	bpl	8815f4 <startup-0x1f77ea0c>
 12c:	834c0605 	movthi	r0, #50693	; 0xc605
 130:	053e0a05 	ldreq	r0, [lr, #-2565]!	; 0xfffff5fb
 134:	03052e02 	movweq	r2, #24066	; 0x5e02
 138:	03040200 	movweq	r0, #16896	; 0x4200
 13c:	001a0521 	andseq	r0, sl, r1, lsr #10
 140:	57030402 	strpl	r0, [r3, -r2, lsl #8]
 144:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
 148:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
 14c:	04020002 	streq	r0, [r2], #-2
 150:	01052001 	tsteq	r5, r1
 154:	5d2b053f 	cfstr32pl	mvfx0, [fp, #-252]!	; 0xffffff04
 158:	05670f05 	strbeq	r0, [r7, #-3845]!	; 0xfffff0fb
 15c:	2d05bb01 	vstrcs	d11, [r5, #-4]
 160:	67070568 	strvs	r0, [r7, -r8, ror #10]
 164:	91670f05 	cmnls	r7, r5, lsl #30
 168:	05830105 	streq	r0, [r3, #261]	; 0x105
 16c:	0205762e 	andeq	r7, r5, #48234496	; 0x2e00000
 170:	053d3d67 	ldreq	r3, [sp, #-3431]!	; 0xfffff299
 174:	2c055901 			; <UNDEFINED> instruction: 0x2c055901
 178:	6702054c 	strvs	r0, [r2, -ip, asr #10]
 17c:	01053d3d 	tsteq	r5, sp, lsr sp
 180:	4c320559 	cfldr32mi	mvfx0, [r2], #-356	; 0xfffffe9c
 184:	3d680205 	sfmcc	f0, 2, [r8, #-20]!	; 0xffffffec
 188:	05201005 	streq	r1, [r0, #-5]!
 18c:	053d3e02 	ldreq	r3, [sp, #-3586]!	; 0xfffff1fe
 190:	2c052f01 	stccs	15, cr2, [r5], {1}
 194:	3d020568 	cfstr32cc	mvfx0, [r2, #-416]	; 0xfffffe60
 198:	1f052f3d 	svcne	0x00052f3d
 19c:	2010052f 	andscs	r0, r0, pc, lsr #10
 1a0:	053d0205 	ldreq	r0, [sp, #-517]!	; 0xfffffdfb
 1a4:	01053d09 	tsteq	r5, r9, lsl #26
 1a8:	7726052f 	strvc	r0, [r6, -pc, lsr #10]!
 1ac:	053d0205 	ldreq	r0, [sp, #-517]!	; 0xfffffdfb
 1b0:	0205200e 	andeq	r2, r5, #14
 1b4:	1e053d2f 	cdpne	13, 0, cr3, cr5, cr15, {1}
 1b8:	5902053d 	stmdbpl	r2, {r0, r2, r3, r4, r5, r8, sl}
 1bc:	05200e05 	streq	r0, [r0, #-3589]!	; 0xfffff1fb
 1c0:	01052f09 	tsteq	r5, r9, lsl #30
 1c4:	a028052f 	eorge	r0, r8, pc, lsr #10
 1c8:	053d0205 	ldreq	r0, [sp, #-517]!	; 0xfffffdfb
 1cc:	0205200e 	andeq	r2, r5, #14
 1d0:	1e053d2f 	cdpne	13, 0, cr3, cr5, cr15, {1}
 1d4:	5902053d 	stmdbpl	r2, {r0, r2, r3, r4, r5, r8, sl}
 1d8:	05200e05 	streq	r0, [r0, #-3589]!	; 0xfffff1fb
 1dc:	01052f09 	tsteq	r5, r9, lsl #30
 1e0:	a02c052f 	eorge	r0, ip, pc, lsr #10
 1e4:	05670805 	strbeq	r0, [r7, #-2053]!	; 0xfffff7fb
 1e8:	0402000a 	streq	r0, [r2], #-10
 1ec:	1f052001 	svcne	0x00052001
 1f0:	01040200 	mrseq	r0, R12_usr
 1f4:	0008053c 	andeq	r0, r8, ip, lsr r5
 1f8:	3c010402 	cfstrscc	mvf0, [r1], {2}
 1fc:	3d2f0205 	sfmcc	f0, 4, [pc, #-20]!	; 1f0 <startup-0x1ffffe10>
 200:	3d010559 	cfstr32cc	mvfx0, [r1, #-356]	; 0xfffffe9c
 204:	054c1805 	strbeq	r1, [ip, #-2053]	; 0xfffff7fb
 208:	3d3d2f02 	ldccc	15, cr2, [sp, #-8]!
 20c:	053d3d3d 	ldreq	r3, [sp, #-3389]!	; 0xfffff2c3
 210:	22053d01 	andcs	r3, r5, #1, 26	; 0x40
 214:	5902053e 	stmdbpl	r2, {r1, r2, r3, r4, r5, r8, sl}
 218:	3d1b053d 	cfldr32cc	mvfx0, [fp, #-244]	; 0xffffff0c
 21c:	052e1005 	streq	r1, [lr, #-5]!
 220:	0a054b05 	beq	152e3c <startup-0x1fead1c4>
 224:	5a02053d 	bpl	81720 <startup-0x1ff7e8e0>
 228:	059f0105 	ldreq	r0, [pc, #261]	; 335 <startup-0x1ffffccb>
 22c:	08054c29 	stmdaeq	r5, {r0, r3, r5, sl, fp, lr}
 230:	000a0567 	andeq	r0, sl, r7, ror #10
 234:	20010402 	andcs	r0, r1, r2, lsl #8
 238:	02001f05 	andeq	r1, r0, #5, 30
 23c:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
 240:	04020008 	streq	r0, [r2], #-8
 244:	02053c01 	andeq	r3, r5, #256	; 0x100
 248:	05593d2f 	ldrbeq	r3, [r9, #-3375]	; 0xfffff2d1
 24c:	14053d01 	strne	r3, [r5], #-3329	; 0xfffff2ff
 250:	3003054e 	andcc	r0, r3, lr, asr #10
 254:	05202405 	streq	r2, [r0, #-1029]!	; 0xfffffbfb
 258:	05212f03 	streq	r2, [r1, #-3843]!	; 0xfffff0fd
 25c:	0e052302 	cdpeq	3, 0, cr2, cr5, cr2, {0}
 260:	2f010520 	svccs	0x00010520
 264:	05a01105 	streq	r1, [r0, #261]!	; 0x105
 268:	05753e07 	ldrbeq	r3, [r5, #-3591]!	; 0xfffff1f9
 26c:	2f2f8402 	svccs	0x002f8402
 270:	054b0405 	strbeq	r0, [fp, #-1029]	; 0xfffffbfb
 274:	03052f08 	movweq	r2, #24328	; 0x5f08
 278:	59040521 	stmdbpl	r4, {r0, r5, r8, sl}
 27c:	053a0905 	ldreq	r0, [sl, #-2309]!	; 0xfffff6fb
 280:	02052e08 	andeq	r2, r5, #8, 28	; 0x80
 284:	4b040532 	blmi	101754 <startup-0x1fefe8ac>
 288:	052f0805 	streq	r0, [pc, #-2053]!	; fffffa8b <__aeabi_idiv0+0xdffff53f>
 28c:	03052116 	movweq	r2, #20758	; 0x5116
 290:	4909053c 	stmdbmi	r9, {r2, r3, r4, r5, r8, sl}
 294:	052e0805 	streq	r0, [lr, #-2053]!	; 0xfffff7fb
 298:	01053109 	tsteq	r5, r9, lsl #2
 29c:	000a0221 	andeq	r0, sl, r1, lsr #4
 2a0:	Address 0x000002a0 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	616c6564 	cmnvs	ip, r4, ror #10
   4:	696d5f79 	stmdbvs	sp!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
   8:	00696c6c 	rsbeq	r6, r9, ip, ror #24
   c:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  10:	6f675f69 	svcvs	0x00675f69
  14:	79786f74 	ldmdbvc	r8!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
  18:	736e7500 	cmnvc	lr, #0, 10
  1c:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
  20:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
  24:	73610074 	cmnvc	r1, #116	; 0x74
  28:	5f696963 	svcpl	0x00696963
  2c:	6c727463 	cfldrdvs	mvd7, [r2], #-396	; 0xfffffe74
  30:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
  34:	656c635f 	strbvs	r6, [ip, #-863]!	; 0xfffffca1
  38:	64007261 	strvs	r7, [r0], #-609	; 0xfffffd9f
  3c:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
  40:	6b696d5f 	blvs	1a5b5c4 <startup-0x1e5a4a3c>
  44:	61006f72 	tstvs	r0, r2, ror pc
  48:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
  4c:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
  50:	635f6574 	cmpvs	pc, #116, 10	; 0x1d000000
  54:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
  58:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
  5c:	74730072 	ldrbtvc	r0, [r3], #-114	; 0xffffff8e
  60:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
  64:	4e470070 	mcrmi	0, 2, r0, cr7, cr0, {3}
  68:	39432055 	stmdbcc	r3, {r0, r2, r4, r6, sp}^
  6c:	2e392039 	mrccs	0, 1, r2, cr9, cr9, {1}
  70:	20312e32 	eorscs	r2, r1, r2, lsr lr
  74:	39313032 	ldmdbcc	r1!, {r1, r4, r5, ip, sp}
  78:	35323031 	ldrcc	r3, [r2, #-49]!	; 0xffffffcf
  7c:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  80:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  84:	5b202965 	blpl	80a620 <startup-0x1f7f59e0>
  88:	2f4d5241 	svccs	0x004d5241
  8c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
  90:	72622d39 	rsbvc	r2, r2, #3648	; 0xe40
  94:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
  98:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  9c:	6f697369 	svcvs	0x00697369
  a0:	3732206e 	ldrcc	r2, [r2, -lr, rrx]!
  a4:	39393537 	ldmdbcc	r9!, {r0, r1, r2, r4, r5, r8, sl, ip, sp}
  a8:	6d2d205d 	stcvs	0, cr2, [sp, #-372]!	; 0xfffffe8c
  ac:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
  b0:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
  b4:	616f6c66 	cmnvs	pc, r6, ror #24
  b8:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
  bc:	6f733d69 	svcvs	0x00733d69
  c0:	2d207466 	cfstrscs	mvf7, [r0, #-408]!	; 0xfffffe68
  c4:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
  c8:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
  cc:	2d36766d 	ldccs	6, cr7, [r6, #-436]!	; 0xfffffe4c
  d0:	672d206d 	strvs	r2, [sp, -sp, rrx]!
  d4:	304f2d20 	subcc	r2, pc, r0, lsr #26
  d8:	74732d20 	ldrbtvc	r2, [r3], #-3360	; 0xfffff2e0
  dc:	39633d64 	stmdbcc	r3!, {r2, r5, r6, r8, sl, fp, ip, sp}^
  e0:	73610039 	cmnvc	r1, #57	; 0x39
  e4:	5f696963 	svcpl	0x00696963
  e8:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
  ec:	6174735f 	cmnvs	r4, pc, asr r3
  f0:	00737574 	rsbseq	r7, r3, r4, ror r5
  f4:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  f8:	72775f69 	rsbsvc	r5, r7, #420	; 0x1a4
  fc:	5f657469 	svcpl	0x00657469
 100:	61746164 	cmnvs	r4, r4, ror #2
 104:	72646100 	rsbvc	r6, r4, #0, 2
 108:	00737365 	rsbseq	r7, r3, r5, ror #6
 10c:	616c6564 	cmnvs	ip, r4, ror #10
 110:	35325f79 	ldrcc	r5, [r2, #-3961]!	; 0xfffff087
 114:	00736e30 	rsbseq	r6, r3, r0, lsr lr
 118:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 11c:	61566e72 	cmpvs	r6, r2, ror lr
 120:	0065756c 	rsbeq	r7, r5, ip, ror #10
 124:	552f3a43 	strpl	r3, [pc, #-2627]!	; fffff6e9 <__aeabi_idiv0+0xdffff19d>
 128:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
 12c:	61736f2f 	cmnvs	r3, pc, lsr #30
 130:	442f6e6e 	strtmi	r6, [pc], #-3694	; 138 <startup-0x1ffffec8>
 134:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 138:	73746e65 	cmnvc	r4, #1616	; 0x650
 13c:	7469472f 	strbtvc	r4, [r9], #-1839	; 0xfffff8d1
 140:	6a6f7250 	bvs	1bdca88 <startup-0x1e423578>
 144:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
 148:	6863532f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r8, r9, ip, lr}^
 14c:	506c6f6f 	rsbpl	r6, ip, pc, ror #30
 150:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
 154:	2f737463 	svccs	0x00737463
 158:	30544144 	subscc	r4, r4, r4, asr #2
 15c:	6f2f3731 	svcvs	0x002f3731
 160:	5f666f6c 	svcpl	0x00666f6c
 164:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
 168:	2f746e65 	svccs	0x00746e65
 16c:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 170:	6574694c 	ldrbvs	r6, [r4, #-2380]!	; 0xfffff6b4
 174:	726f772f 	rsbvc	r7, pc, #12320768	; 0xbc0000
 178:	6170736b 	cmnvs	r0, fp, ror #6
 17c:	6c4f6563 	cfstr64vs	mvdx6, [pc], {99}	; 0x63
 180:	612f666f 			; <UNDEFINED> instruction: 0x612f666f
 184:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 188:	70736964 	rsbsvc	r6, r3, r4, ror #18
 18c:	2f79616c 	svccs	0x0079616c
 190:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 194:	73696469 	cmnvc	r9, #1761607680	; 0x69000000
 198:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 19c:	6100632e 	tstvs	r0, lr, lsr #6
 1a0:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 1a4:	6165725f 	cmnvs	r5, pc, asr r2
 1a8:	6f635f64 	svcvs	0x00635f64
 1ac:	6f72746e 	svcvs	0x0072746e
 1b0:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
 1b4:	63736100 	cmnvs	r3, #0, 2
 1b8:	725f6969 	subsvc	r6, pc, #1720320	; 0x1a4000
 1bc:	5f646165 	svcpl	0x00646165
 1c0:	61746164 	cmnvs	r4, r4, ror #2
 1c4:	736e7500 	cmnvc	lr, #0, 10
 1c8:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
 1cc:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
 1d0:	6d007261 	sfmvs	f7, 4, [r0, #-388]	; 0xfffffe7c
 1d4:	006e6961 	rsbeq	r6, lr, r1, ror #18
 1d8:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 1dc:	6f635f69 	svcvs	0x00635f69
 1e0:	6e616d6d 	cdpvs	13, 6, cr6, cr1, cr13, {3}
 1e4:	6e690064 	cdpvs	0, 6, cr0, cr9, cr4, {3}
 1e8:	615f7469 	cmpvs	pc, r9, ror #8
 1ec:	62007070 	andvs	r7, r0, #112	; 0x70
 1f0:	00657479 	rsbeq	r7, r5, r9, ror r4
 1f4:	58746f6e 	ldmdapl	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 1f8:	73657400 	cmnvc	r5, #0, 8
 1fc:	74003174 	strvc	r3, [r0], #-372	; 0xfffffe8c
 200:	32747365 	rsbscc	r7, r4, #-1811939327	; 0x94000001
 204:	63736100 	cmnvs	r3, #0, 2
 208:	775f6969 	ldrbvc	r6, [pc, -r9, ror #18]
 20c:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 210:	646d635f 	strbtvs	r6, [sp], #-863	; 0xfffffca1
 214:	5c3a4300 	ldcpl	3, cr4, [sl], #-0
 218:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
 21c:	736f5c73 	cmnvc	pc, #29440	; 0x7300
 220:	5c6e6e61 	stclpl	14, cr6, [lr], #-388	; 0xfffffe7c
 224:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
 228:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 22c:	69475c73 	stmdbvs	r7, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
 230:	6f725074 	svcvs	0x00725074
 234:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 238:	63535c73 	cmpvs	r3, #29440	; 0x7300
 23c:	6c6f6f68 	stclvs	15, cr6, [pc], #-416	; a4 <startup-0x1fffff5c>
 240:	6a6f7250 	bvs	1bdcb88 <startup-0x1e423478>
 244:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
 248:	5441445c 	strbpl	r4, [r1], #-1116	; 0xfffffba4
 24c:	5c373130 	ldfpls	f3, [r7], #-192	; 0xffffff40
 250:	666f6c6f 	strbtvs	r6, [pc], -pc, ror #24
 254:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
 258:	746e6574 	strbtvc	r6, [lr], #-1396	; 0xfffffa8c
 25c:	646f435c 	strbtvs	r4, [pc], #-860	; 264 <startup-0x1ffffd9c>
 260:	74694c65 	strbtvc	r4, [r9], #-3173	; 0xfffff39b
 264:	6f775c65 	svcvs	0x00775c65
 268:	70736b72 	rsbsvc	r6, r3, r2, ror fp
 26c:	4f656361 	svcmi	0x00656361
 270:	5c666f6c 	stclpl	15, cr6, [r6], #-432	; 0xfffffe50
 274:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 278:	73696469 	cmnvc	r9, #1761607680	; 0x69000000
 27c:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 280:	63736100 	cmnvs	r3, #0, 2
 284:	775f6969 	ldrbvc	r6, [pc, -r9, ror #18]
 288:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 28c:	6168635f 	cmnvs	r8, pc, asr r3
 290:	73610072 	cmnvc	r1, #114	; 0x72
 294:	5f696963 	svcpl	0x00696963
 298:	6c727463 	cfldrdvs	mvd7, [r2], #-396	; 0xfffffe74
 29c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
 2a0:	7465735f 	strbtvc	r7, [r5], #-863	; 0xfffffca1
 2a4:	63736100 	cmnvs	r3, #0, 2
 2a8:	695f6969 	ldmdbvs	pc, {r0, r3, r5, r6, r8, fp, sp, lr}^	; <UNPREDICTABLE>
 2ac:	0074696e 	rsbseq	r6, r4, lr, ror #18

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d39 	eorscc	r2, r2, r9, lsr sp
  30:	712d3931 			; <UNDEFINED> instruction: 0x712d3931
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	31393130 	teqcc	r9, r0, lsr r1
  48:	20353230 	eorscs	r3, r5, r0, lsr r2
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  5c:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  60:	6172622d 	cmnvs	r2, sp, lsr #4
  64:	2068636e 	rsbcs	r6, r8, lr, ror #6
  68:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  6c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  70:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  74:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002b41 	andeq	r2, r0, r1, asr #22
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000021 	andeq	r0, r0, r1, lsr #32
  10:	2d533605 	ldclcs	6, cr3, [r3, #-20]	; 0xffffffec
  14:	0c06004d 	stceq	0, cr0, [r6], {77}	; 0x4d
  18:	01094d07 	tsteq	r9, r7, lsl #26
  1c:	01140412 	tsteq	r4, r2, lsl r4
  20:	03170115 	tsteq	r7, #1073741829	; 0x40000005
  24:	01190118 	tsteq	r9, r8, lsl r1
  28:	061e011a 			; <UNDEFINED> instruction: 0x061e011a

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000048 	andeq	r0, r0, r8, asr #32
  30:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  34:	41018e02 	tstmi	r1, r2, lsl #28
  38:	0000070d 	andeq	r0, r0, sp, lsl #14
  3c:	0000001c 	andeq	r0, r0, ip, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	20000058 	andcs	r0, r0, r8, asr r0
  48:	00000042 	andeq	r0, r0, r2, asr #32
  4c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  50:	41018e02 	tstmi	r1, r2, lsl #28
  54:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
  58:	00000007 	andeq	r0, r0, r7
  5c:	0000001c 	andeq	r0, r0, ip, lsl r0
  60:	00000000 	andeq	r0, r0, r0
  64:	2000009a 	mulcs	r0, sl, r0
  68:	00000046 	andeq	r0, r0, r6, asr #32
  6c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  70:	41018e02 	tstmi	r1, r2, lsl #28
  74:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
  78:	00000007 	andeq	r0, r0, r7
  7c:	0000001c 	andeq	r0, r0, ip, lsl r0
  80:	00000000 	andeq	r0, r0, r0
  84:	200000e0 	andcs	r0, r0, r0, ror #1
  88:	00000030 	andeq	r0, r0, r0, lsr r0
  8c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  90:	41018e02 	tstmi	r1, r2, lsl #28
  94:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  98:	00000007 	andeq	r0, r0, r7
  9c:	0000001c 	andeq	r0, r0, ip, lsl r0
  a0:	00000000 	andeq	r0, r0, r0
  a4:	20000110 	andcs	r0, r0, r0, lsl r1
  a8:	00000048 	andeq	r0, r0, r8, asr #32
  ac:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  b0:	41018e02 	tstmi	r1, r2, lsl #28
  b4:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
  b8:	00000007 	andeq	r0, r0, r7
  bc:	0000001c 	andeq	r0, r0, ip, lsl r0
  c0:	00000000 	andeq	r0, r0, r0
  c4:	20000158 	andcs	r0, r0, r8, asr r1
  c8:	0000002a 	andeq	r0, r0, sl, lsr #32
  cc:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  d0:	41018e02 	tstmi	r1, r2, lsl #28
  d4:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  d8:	00000007 	andeq	r0, r0, r7
  dc:	0000001c 	andeq	r0, r0, ip, lsl r0
  e0:	00000000 	andeq	r0, r0, r0
  e4:	20000182 	andcs	r0, r0, r2, lsl #3
  e8:	0000002a 	andeq	r0, r0, sl, lsr #32
  ec:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  f0:	41018e02 	tstmi	r1, r2, lsl #28
  f4:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  f8:	00000007 	andeq	r0, r0, r7
  fc:	0000001c 	andeq	r0, r0, ip, lsl r0
 100:	00000000 	andeq	r0, r0, r0
 104:	200001ac 	andcs	r0, r0, ip, lsr #3
 108:	00000030 	andeq	r0, r0, r0, lsr r0
 10c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 110:	41018e02 	tstmi	r1, r2, lsl #28
 114:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 118:	00000007 	andeq	r0, r0, r7
 11c:	0000001c 	andeq	r0, r0, ip, lsl r0
 120:	00000000 	andeq	r0, r0, r0
 124:	200001dc 	ldrdcs	r0, [r0], -ip
 128:	00000034 	andeq	r0, r0, r4, lsr r0
 12c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 130:	41018e02 	tstmi	r1, r2, lsl #28
 134:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 138:	00000007 	andeq	r0, r0, r7
 13c:	0000001c 	andeq	r0, r0, ip, lsl r0
 140:	00000000 	andeq	r0, r0, r0
 144:	20000210 	andcs	r0, r0, r0, lsl r2
 148:	00000040 	andeq	r0, r0, r0, asr #32
 14c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 150:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 154:	180e4101 	stmdane	lr, {r0, r8, lr}
 158:	00070d41 	andeq	r0, r7, r1, asr #26
 15c:	0000001c 	andeq	r0, r0, ip, lsl r0
 160:	00000000 	andeq	r0, r0, r0
 164:	20000250 	andcs	r0, r0, r0, asr r2
 168:	00000040 	andeq	r0, r0, r0, asr #32
 16c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 170:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 174:	180e4101 	stmdane	lr, {r0, r8, lr}
 178:	00070d41 	andeq	r0, r7, r1, asr #26
 17c:	0000001c 	andeq	r0, r0, ip, lsl r0
 180:	00000000 	andeq	r0, r0, r0
 184:	20000290 	mulcs	r0, r0, r2
 188:	0000003c 	andeq	r0, r0, ip, lsr r0
 18c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 190:	41018e02 	tstmi	r1, r2, lsl #28
 194:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 198:	00000007 	andeq	r0, r0, r7
 19c:	00000018 	andeq	r0, r0, r8, lsl r0
 1a0:	00000000 	andeq	r0, r0, r0
 1a4:	200002cc 	andcs	r0, r0, ip, asr #5
 1a8:	0000002e 	andeq	r0, r0, lr, lsr #32
 1ac:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1b0:	41018e02 	tstmi	r1, r2, lsl #28
 1b4:	0000070d 	andeq	r0, r0, sp, lsl #14
 1b8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1bc:	00000000 	andeq	r0, r0, r0
 1c0:	200002fa 	strdcs	r0, [r0], -sl
 1c4:	0000004e 	andeq	r0, r0, lr, asr #32
 1c8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1cc:	41018e02 	tstmi	r1, r2, lsl #28
 1d0:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 1d4:	00000007 	andeq	r0, r0, r7
 1d8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1dc:	00000000 	andeq	r0, r0, r0
 1e0:	20000348 	andcs	r0, r0, r8, asr #6
 1e4:	0000003c 	andeq	r0, r0, ip, lsr r0
 1e8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1ec:	41018e02 	tstmi	r1, r2, lsl #28
 1f0:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 1f4:	00000007 	andeq	r0, r0, r7
 1f8:	00000018 	andeq	r0, r0, r8, lsl r0
 1fc:	00000000 	andeq	r0, r0, r0
 200:	20000384 	andcs	r0, r0, r4, lsl #7
 204:	00000028 	andeq	r0, r0, r8, lsr #32
 208:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 20c:	41018e02 	tstmi	r1, r2, lsl #28
 210:	0000070d 	andeq	r0, r0, sp, lsl #14
 214:	00000020 	andeq	r0, r0, r0, lsr #32
 218:	00000000 	andeq	r0, r0, r0
 21c:	200003ac 	andcs	r0, r0, ip, lsr #7
 220:	00000088 	andeq	r0, r0, r8, lsl #1
 224:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 228:	87038504 	strhi	r8, [r3, -r4, lsl #10]
 22c:	41018e02 	tstmi	r1, r2, lsl #28
 230:	0d41380e 	stcleq	8, cr3, [r1, #-56]	; 0xffffffc8
 234:	00000007 	andeq	r0, r0, r7
 238:	0000000c 	andeq	r0, r0, ip
 23c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 240:	7c010001 	stcvc	0, cr0, [r1], {1}
 244:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 248:	0000000c 	andeq	r0, r0, ip
 24c:	00000238 	andeq	r0, r0, r8, lsr r2
 250:	20000439 	andcs	r0, r0, r9, lsr r4
 254:	0000010a 	andeq	r0, r0, sl, lsl #2
