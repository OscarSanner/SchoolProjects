
./Debug/fivePointFour.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
typedef unsigned char uint8_t;

__attribute__((naked)) __attribute__((section (".start_section")) )
void startup ( void )
{
__asm__ volatile(" LDR R0,=0x2001C000\n");		/* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile(" BL main\n");					/* call main */
20000004:	f000 f9d4 	bl	200003b0 <main>
__asm__ volatile(".L1: B .L1\n");				/* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <delay_250ns>:

void delay_250ns(){
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
	* STK_CTRL = 0;
20000014:	4b0c      	ldr	r3, [pc, #48]	; (20000048 <delay_250ns+0x38>)
20000016:	2200      	movs	r2, #0
20000018:	601a      	str	r2, [r3, #0]
	* STK_LOAD = (168 / 4) - 1;
2000001a:	4b0c      	ldr	r3, [pc, #48]	; (2000004c <delay_250ns+0x3c>)
2000001c:	2229      	movs	r2, #41	; 0x29
2000001e:	601a      	str	r2, [r3, #0]
	* STK_VAL = 0;
20000020:	4b0b      	ldr	r3, [pc, #44]	; (20000050 <delay_250ns+0x40>)
20000022:	2200      	movs	r2, #0
20000024:	601a      	str	r2, [r3, #0]
	* STK_CTRL = 5;
20000026:	4b08      	ldr	r3, [pc, #32]	; (20000048 <delay_250ns+0x38>)
20000028:	2205      	movs	r2, #5
2000002a:	601a      	str	r2, [r3, #0]
	while((* COUNT_FLAG & 0x01) !=0);
2000002c:	46c0      	nop			; (mov r8, r8)
2000002e:	4b09      	ldr	r3, [pc, #36]	; (20000054 <delay_250ns+0x44>)
20000030:	781b      	ldrb	r3, [r3, #0]
20000032:	b2db      	uxtb	r3, r3
20000034:	001a      	movs	r2, r3
20000036:	2301      	movs	r3, #1
20000038:	4013      	ands	r3, r2
2000003a:	d1f8      	bne.n	2000002e <delay_250ns+0x1e>
	* STK_CTRL = 0;
2000003c:	4b02      	ldr	r3, [pc, #8]	; (20000048 <delay_250ns+0x38>)
2000003e:	2200      	movs	r2, #0
20000040:	601a      	str	r2, [r3, #0]
}
20000042:	46c0      	nop			; (mov r8, r8)
20000044:	46bd      	mov	sp, r7
20000046:	bd80      	pop	{r7, pc}
20000048:	e000e010 	and	lr, r0, r0, lsl r0
2000004c:	e000e014 	and	lr, r0, r4, lsl r0
20000050:	e000e018 	and	lr, r0, r8, lsl r0
20000054:	e000e012 	and	lr, r0, r2, lsl r0

20000058 <delayMikro>:

void delayMikro(unsigned int us){
20000058:	b580      	push	{r7, lr}
2000005a:	b084      	sub	sp, #16
2000005c:	af00      	add	r7, sp, #0
2000005e:	6078      	str	r0, [r7, #4]
	#ifdef SIMULATOR
		us = us/1000;
20000060:	687b      	ldr	r3, [r7, #4]
20000062:	22fa      	movs	r2, #250	; 0xfa
20000064:	0091      	lsls	r1, r2, #2
20000066:	0018      	movs	r0, r3
20000068:	f000 f9e6 	bl	20000438 <__udivsi3>
2000006c:	0003      	movs	r3, r0
2000006e:	607b      	str	r3, [r7, #4]
		us++;
20000070:	687b      	ldr	r3, [r7, #4]
20000072:	3301      	adds	r3, #1
20000074:	607b      	str	r3, [r7, #4]
	#endif
	
	for(int i = 0; i < 4*us; i++){
20000076:	2300      	movs	r3, #0
20000078:	60fb      	str	r3, [r7, #12]
2000007a:	e004      	b.n	20000086 <delayMikro+0x2e>
		delay_250ns();
2000007c:	f7ff ffc8 	bl	20000010 <delay_250ns>
	for(int i = 0; i < 4*us; i++){
20000080:	68fb      	ldr	r3, [r7, #12]
20000082:	3301      	adds	r3, #1
20000084:	60fb      	str	r3, [r7, #12]
20000086:	687b      	ldr	r3, [r7, #4]
20000088:	009a      	lsls	r2, r3, #2
2000008a:	68fb      	ldr	r3, [r7, #12]
2000008c:	429a      	cmp	r2, r3
2000008e:	d8f5      	bhi.n	2000007c <delayMikro+0x24>
	}
}
20000090:	46c0      	nop			; (mov r8, r8)
20000092:	46c0      	nop			; (mov r8, r8)
20000094:	46bd      	mov	sp, r7
20000096:	b004      	add	sp, #16
20000098:	bd80      	pop	{r7, pc}

2000009a <delayMilli>:

void delayMilli(unsigned int ms){
2000009a:	b580      	push	{r7, lr}
2000009c:	b084      	sub	sp, #16
2000009e:	af00      	add	r7, sp, #0
200000a0:	6078      	str	r0, [r7, #4]
	#ifdef SIMULATOR
		ms = ms/1000;
200000a2:	687b      	ldr	r3, [r7, #4]
200000a4:	22fa      	movs	r2, #250	; 0xfa
200000a6:	0091      	lsls	r1, r2, #2
200000a8:	0018      	movs	r0, r3
200000aa:	f000 f9c5 	bl	20000438 <__udivsi3>
200000ae:	0003      	movs	r3, r0
200000b0:	607b      	str	r3, [r7, #4]
		ms++;
200000b2:	687b      	ldr	r3, [r7, #4]
200000b4:	3301      	adds	r3, #1
200000b6:	607b      	str	r3, [r7, #4]
	#endif
	
	for(int i = 0; i < 4000*ms; i++){
200000b8:	2300      	movs	r3, #0
200000ba:	60fb      	str	r3, [r7, #12]
200000bc:	e004      	b.n	200000c8 <delayMilli+0x2e>
		delay_250ns();
200000be:	f7ff ffa7 	bl	20000010 <delay_250ns>
	for(int i = 0; i < 4000*ms; i++){
200000c2:	68fb      	ldr	r3, [r7, #12]
200000c4:	3301      	adds	r3, #1
200000c6:	60fb      	str	r3, [r7, #12]
200000c8:	687a      	ldr	r2, [r7, #4]
200000ca:	0013      	movs	r3, r2
200000cc:	015b      	lsls	r3, r3, #5
200000ce:	1a9b      	subs	r3, r3, r2
200000d0:	009b      	lsls	r3, r3, #2
200000d2:	189b      	adds	r3, r3, r2
200000d4:	015b      	lsls	r3, r3, #5
200000d6:	001a      	movs	r2, r3
200000d8:	68fb      	ldr	r3, [r7, #12]
200000da:	429a      	cmp	r2, r3
200000dc:	d8ef      	bhi.n	200000be <delayMilli+0x24>
	}
}
200000de:	46c0      	nop			; (mov r8, r8)
200000e0:	46c0      	nop			; (mov r8, r8)
200000e2:	46bd      	mov	sp, r7
200000e4:	b004      	add	sp, #16
200000e6:	bd80      	pop	{r7, pc}

200000e8 <ascii_ctrl_bit_set>:

void ascii_ctrl_bit_set(unsigned char x){
200000e8:	b580      	push	{r7, lr}
200000ea:	b082      	sub	sp, #8
200000ec:	af00      	add	r7, sp, #0
200000ee:	0002      	movs	r2, r0
200000f0:	1dfb      	adds	r3, r7, #7
200000f2:	701a      	strb	r2, [r3, #0]
	(* portOdrLow) |=x|B_SELECT;
200000f4:	4b07      	ldr	r3, [pc, #28]	; (20000114 <ascii_ctrl_bit_set+0x2c>)
200000f6:	781b      	ldrb	r3, [r3, #0]
200000f8:	b2da      	uxtb	r2, r3
200000fa:	1dfb      	adds	r3, r7, #7
200000fc:	781b      	ldrb	r3, [r3, #0]
200000fe:	4313      	orrs	r3, r2
20000100:	b2db      	uxtb	r3, r3
20000102:	4a04      	ldr	r2, [pc, #16]	; (20000114 <ascii_ctrl_bit_set+0x2c>)
20000104:	2104      	movs	r1, #4
20000106:	430b      	orrs	r3, r1
20000108:	b2db      	uxtb	r3, r3
2000010a:	7013      	strb	r3, [r2, #0]
}
2000010c:	46c0      	nop			; (mov r8, r8)
2000010e:	46bd      	mov	sp, r7
20000110:	b002      	add	sp, #8
20000112:	bd80      	pop	{r7, pc}
20000114:	40021014 	andmi	r1, r2, r4, lsl r0

20000118 <ascii_ctrl_bit_clear>:

void ascii_ctrl_bit_clear(unsigned char x){
20000118:	b580      	push	{r7, lr}
2000011a:	b084      	sub	sp, #16
2000011c:	af00      	add	r7, sp, #0
2000011e:	0002      	movs	r2, r0
20000120:	1dfb      	adds	r3, r7, #7
20000122:	701a      	strb	r2, [r3, #0]
	char notX = ~x;
20000124:	200f      	movs	r0, #15
20000126:	183b      	adds	r3, r7, r0
20000128:	1dfa      	adds	r2, r7, #7
2000012a:	7812      	ldrb	r2, [r2, #0]
2000012c:	43d2      	mvns	r2, r2
2000012e:	701a      	strb	r2, [r3, #0]
	* portOdrLow &=notX;
20000130:	4b0a      	ldr	r3, [pc, #40]	; (2000015c <ascii_ctrl_bit_clear+0x44>)
20000132:	781b      	ldrb	r3, [r3, #0]
20000134:	b2db      	uxtb	r3, r3
20000136:	4909      	ldr	r1, [pc, #36]	; (2000015c <ascii_ctrl_bit_clear+0x44>)
20000138:	183a      	adds	r2, r7, r0
2000013a:	7812      	ldrb	r2, [r2, #0]
2000013c:	4013      	ands	r3, r2
2000013e:	b2db      	uxtb	r3, r3
20000140:	700b      	strb	r3, [r1, #0]
	* portOdrLow |= B_SELECT;
20000142:	4b06      	ldr	r3, [pc, #24]	; (2000015c <ascii_ctrl_bit_clear+0x44>)
20000144:	781b      	ldrb	r3, [r3, #0]
20000146:	b2db      	uxtb	r3, r3
20000148:	4a04      	ldr	r2, [pc, #16]	; (2000015c <ascii_ctrl_bit_clear+0x44>)
2000014a:	2104      	movs	r1, #4
2000014c:	430b      	orrs	r3, r1
2000014e:	b2db      	uxtb	r3, r3
20000150:	7013      	strb	r3, [r2, #0]
}
20000152:	46c0      	nop			; (mov r8, r8)
20000154:	46bd      	mov	sp, r7
20000156:	b004      	add	sp, #16
20000158:	bd80      	pop	{r7, pc}
2000015a:	46c0      	nop			; (mov r8, r8)
2000015c:	40021014 	andmi	r1, r2, r4, lsl r0

20000160 <ascii_write_cmd>:

void ascii_write_cmd(unsigned char command){
20000160:	b580      	push	{r7, lr}
20000162:	b082      	sub	sp, #8
20000164:	af00      	add	r7, sp, #0
20000166:	0002      	movs	r2, r0
20000168:	1dfb      	adds	r3, r7, #7
2000016a:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_clear(B_RS);
2000016c:	2001      	movs	r0, #1
2000016e:	f7ff ffd3 	bl	20000118 <ascii_ctrl_bit_clear>
	ascii_ctrl_bit_clear(B_RW);
20000172:	2002      	movs	r0, #2
20000174:	f7ff ffd0 	bl	20000118 <ascii_ctrl_bit_clear>
	ascii_write_controller(command);
20000178:	1dfb      	adds	r3, r7, #7
2000017a:	781b      	ldrb	r3, [r3, #0]
2000017c:	0018      	movs	r0, r3
2000017e:	f000 f819 	bl	200001b4 <ascii_write_controller>
}
20000182:	46c0      	nop			; (mov r8, r8)
20000184:	46bd      	mov	sp, r7
20000186:	b002      	add	sp, #8
20000188:	bd80      	pop	{r7, pc}

2000018a <ascii_write_data>:

void ascii_write_data(unsigned char data){
2000018a:	b580      	push	{r7, lr}
2000018c:	b082      	sub	sp, #8
2000018e:	af00      	add	r7, sp, #0
20000190:	0002      	movs	r2, r0
20000192:	1dfb      	adds	r3, r7, #7
20000194:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_set(B_RS);
20000196:	2001      	movs	r0, #1
20000198:	f7ff ffa6 	bl	200000e8 <ascii_ctrl_bit_set>
	ascii_ctrl_bit_clear(B_RW);
2000019c:	2002      	movs	r0, #2
2000019e:	f7ff ffbb 	bl	20000118 <ascii_ctrl_bit_clear>
	ascii_write_controller(data);
200001a2:	1dfb      	adds	r3, r7, #7
200001a4:	781b      	ldrb	r3, [r3, #0]
200001a6:	0018      	movs	r0, r3
200001a8:	f000 f804 	bl	200001b4 <ascii_write_controller>
}
200001ac:	46c0      	nop			; (mov r8, r8)
200001ae:	46bd      	mov	sp, r7
200001b0:	b002      	add	sp, #8
200001b2:	bd80      	pop	{r7, pc}

200001b4 <ascii_write_controller>:

void ascii_write_controller(unsigned char command){
200001b4:	b580      	push	{r7, lr}
200001b6:	b082      	sub	sp, #8
200001b8:	af00      	add	r7, sp, #0
200001ba:	0002      	movs	r2, r0
200001bc:	1dfb      	adds	r3, r7, #7
200001be:	701a      	strb	r2, [r3, #0]
		//	delay_250ns();
	ascii_ctrl_bit_set(B_E);
200001c0:	2040      	movs	r0, #64	; 0x40
200001c2:	f7ff ff91 	bl	200000e8 <ascii_ctrl_bit_set>
	* portOdrHigh = command;
200001c6:	4a06      	ldr	r2, [pc, #24]	; (200001e0 <ascii_write_controller+0x2c>)
200001c8:	1dfb      	adds	r3, r7, #7
200001ca:	781b      	ldrb	r3, [r3, #0]
200001cc:	7013      	strb	r3, [r2, #0]
		//	delay_250ns();
	ascii_ctrl_bit_clear(B_E);
200001ce:	2040      	movs	r0, #64	; 0x40
200001d0:	f7ff ffa2 	bl	20000118 <ascii_ctrl_bit_clear>
	delay_250ns();
200001d4:	f7ff ff1c 	bl	20000010 <delay_250ns>
}
200001d8:	46c0      	nop			; (mov r8, r8)
200001da:	46bd      	mov	sp, r7
200001dc:	b002      	add	sp, #8
200001de:	bd80      	pop	{r7, pc}
200001e0:	40021015 	andmi	r1, r2, r5, lsl r0

200001e4 <ascii_read_controller>:

unsigned char ascii_read_controller(){
200001e4:	b580      	push	{r7, lr}
200001e6:	b082      	sub	sp, #8
200001e8:	af00      	add	r7, sp, #0
	unsigned char rv;
	ascii_ctrl_bit_set(B_E);
200001ea:	2040      	movs	r0, #64	; 0x40
200001ec:	f7ff ff7c 	bl	200000e8 <ascii_ctrl_bit_set>
	delay_250ns();
200001f0:	f7ff ff0e 	bl	20000010 <delay_250ns>
	delay_250ns();
200001f4:	f7ff ff0c 	bl	20000010 <delay_250ns>
	rv = * portIdrHigh;
200001f8:	4a06      	ldr	r2, [pc, #24]	; (20000214 <ascii_read_controller+0x30>)
200001fa:	1dfb      	adds	r3, r7, #7
200001fc:	7812      	ldrb	r2, [r2, #0]
200001fe:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_clear(B_E);
20000200:	2040      	movs	r0, #64	; 0x40
20000202:	f7ff ff89 	bl	20000118 <ascii_ctrl_bit_clear>
	return rv;
20000206:	1dfb      	adds	r3, r7, #7
20000208:	781b      	ldrb	r3, [r3, #0]
}
2000020a:	0018      	movs	r0, r3
2000020c:	46bd      	mov	sp, r7
2000020e:	b002      	add	sp, #8
20000210:	bd80      	pop	{r7, pc}
20000212:	46c0      	nop			; (mov r8, r8)
20000214:	40021011 	andmi	r1, r2, r1, lsl r0

20000218 <ascii_read_data>:

unsigned char ascii_read_data(){
20000218:	b580      	push	{r7, lr}
2000021a:	b082      	sub	sp, #8
2000021c:	af00      	add	r7, sp, #0
	* portModer = 0x00005555;
2000021e:	4b0a      	ldr	r3, [pc, #40]	; (20000248 <ascii_read_data+0x30>)
20000220:	4a0a      	ldr	r2, [pc, #40]	; (2000024c <ascii_read_data+0x34>)
20000222:	601a      	str	r2, [r3, #0]
	unsigned char rv;
	ascii_ctrl_bit_set(B_RS);
20000224:	2001      	movs	r0, #1
20000226:	f7ff ff5f 	bl	200000e8 <ascii_ctrl_bit_set>
	ascii_ctrl_bit_set(B_RW);
2000022a:	2002      	movs	r0, #2
2000022c:	f7ff ff5c 	bl	200000e8 <ascii_ctrl_bit_set>
	rv = ascii_read_controller;
20000230:	4a07      	ldr	r2, [pc, #28]	; (20000250 <ascii_read_data+0x38>)
20000232:	1dfb      	adds	r3, r7, #7
20000234:	701a      	strb	r2, [r3, #0]
	* portModer = 0x55555555;
20000236:	4b04      	ldr	r3, [pc, #16]	; (20000248 <ascii_read_data+0x30>)
20000238:	4a06      	ldr	r2, [pc, #24]	; (20000254 <ascii_read_data+0x3c>)
2000023a:	601a      	str	r2, [r3, #0]
	return rv;
2000023c:	1dfb      	adds	r3, r7, #7
2000023e:	781b      	ldrb	r3, [r3, #0]
}
20000240:	0018      	movs	r0, r3
20000242:	46bd      	mov	sp, r7
20000244:	b002      	add	sp, #8
20000246:	bd80      	pop	{r7, pc}
20000248:	40021000 	andmi	r1, r2, r0
2000024c:	00005555 	andeq	r5, r0, r5, asr r5
20000250:	200001e5 	andcs	r0, r0, r5, ror #3
20000254:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20000258 <ascii_read_status>:

unsigned char ascii_read_status(){
20000258:	b590      	push	{r4, r7, lr}
2000025a:	b083      	sub	sp, #12
2000025c:	af00      	add	r7, sp, #0
	* portModer = 0x00005555;
2000025e:	4b0b      	ldr	r3, [pc, #44]	; (2000028c <ascii_read_status+0x34>)
20000260:	4a0b      	ldr	r2, [pc, #44]	; (20000290 <ascii_read_status+0x38>)
20000262:	601a      	str	r2, [r3, #0]
	unsigned char rv;
	ascii_ctrl_bit_clear(B_RS);
20000264:	2001      	movs	r0, #1
20000266:	f7ff ff57 	bl	20000118 <ascii_ctrl_bit_clear>
	ascii_ctrl_bit_set(B_RW);
2000026a:	2002      	movs	r0, #2
2000026c:	f7ff ff3c 	bl	200000e8 <ascii_ctrl_bit_set>
	rv = ascii_read_controller();
20000270:	1dfc      	adds	r4, r7, #7
20000272:	f7ff ffb7 	bl	200001e4 <ascii_read_controller>
20000276:	0003      	movs	r3, r0
20000278:	7023      	strb	r3, [r4, #0]
	* portModer = 0x55555555;
2000027a:	4b04      	ldr	r3, [pc, #16]	; (2000028c <ascii_read_status+0x34>)
2000027c:	4a05      	ldr	r2, [pc, #20]	; (20000294 <ascii_read_status+0x3c>)
2000027e:	601a      	str	r2, [r3, #0]
	return rv;
20000280:	1dfb      	adds	r3, r7, #7
20000282:	781b      	ldrb	r3, [r3, #0]
} 
20000284:	0018      	movs	r0, r3
20000286:	46bd      	mov	sp, r7
20000288:	b003      	add	sp, #12
2000028a:	bd90      	pop	{r4, r7, pc}
2000028c:	40021000 	andmi	r1, r2, r0
20000290:	00005555 	andeq	r5, r0, r5, asr r5
20000294:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20000298 <ascii_command>:

void ascii_command(unsigned char command){
20000298:	b580      	push	{r7, lr}
2000029a:	b082      	sub	sp, #8
2000029c:	af00      	add	r7, sp, #0
2000029e:	0002      	movs	r2, r0
200002a0:	1dfb      	adds	r3, r7, #7
200002a2:	701a      	strb	r2, [r3, #0]
	while((ascii_read_status() & 0x80) == 0x80){}
200002a4:	46c0      	nop			; (mov r8, r8)
200002a6:	f7ff ffd7 	bl	20000258 <ascii_read_status>
200002aa:	0003      	movs	r3, r0
200002ac:	001a      	movs	r2, r3
200002ae:	2380      	movs	r3, #128	; 0x80
200002b0:	4013      	ands	r3, r2
200002b2:	2b80      	cmp	r3, #128	; 0x80
200002b4:	d0f7      	beq.n	200002a6 <ascii_command+0xe>
	delayMikro(8);
200002b6:	2008      	movs	r0, #8
200002b8:	f7ff fece 	bl	20000058 <delayMikro>
	ascii_write_cmd(command);
200002bc:	1dfb      	adds	r3, r7, #7
200002be:	781b      	ldrb	r3, [r3, #0]
200002c0:	0018      	movs	r0, r3
200002c2:	f7ff ff4d 	bl	20000160 <ascii_write_cmd>
	delayMilli(2);
200002c6:	2002      	movs	r0, #2
200002c8:	f7ff fee7 	bl	2000009a <delayMilli>
}
200002cc:	46c0      	nop			; (mov r8, r8)
200002ce:	46bd      	mov	sp, r7
200002d0:	b002      	add	sp, #8
200002d2:	bd80      	pop	{r7, pc}

200002d4 <ascii_init>:

void ascii_init(){
200002d4:	b580      	push	{r7, lr}
200002d6:	af00      	add	r7, sp, #0
	ascii_ctrl_bit_clear(B_RS);
200002d8:	2001      	movs	r0, #1
200002da:	f7ff ff1d 	bl	20000118 <ascii_ctrl_bit_clear>
	ascii_ctrl_bit_clear(B_RW);
200002de:	2002      	movs	r0, #2
200002e0:	f7ff ff1a 	bl	20000118 <ascii_ctrl_bit_clear>
	ascii_command(0x38);
200002e4:	2038      	movs	r0, #56	; 0x38
200002e6:	f7ff ffd7 	bl	20000298 <ascii_command>
	ascii_command(0x0E);
200002ea:	200e      	movs	r0, #14
200002ec:	f7ff ffd4 	bl	20000298 <ascii_command>
	ascii_command(0x01);
200002f0:	2001      	movs	r0, #1
200002f2:	f7ff ffd1 	bl	20000298 <ascii_command>
	ascii_command(0x06);
200002f6:	2006      	movs	r0, #6
200002f8:	f7ff ffce 	bl	20000298 <ascii_command>
}
200002fc:	46c0      	nop			; (mov r8, r8)
200002fe:	46bd      	mov	sp, r7
20000300:	bd80      	pop	{r7, pc}

20000302 <ascii_gotoxy>:

void ascii_gotoxy(int x, int y){
20000302:	b580      	push	{r7, lr}
20000304:	b084      	sub	sp, #16
20000306:	af00      	add	r7, sp, #0
20000308:	6078      	str	r0, [r7, #4]
2000030a:	6039      	str	r1, [r7, #0]
	ascii_ctrl_bit_clear(B_RS);
2000030c:	2001      	movs	r0, #1
2000030e:	f7ff ff03 	bl	20000118 <ascii_ctrl_bit_clear>
	ascii_ctrl_bit_clear(B_RW);
20000312:	2002      	movs	r0, #2
20000314:	f7ff ff00 	bl	20000118 <ascii_ctrl_bit_clear>
	unsigned char adress = x - 1;
20000318:	687b      	ldr	r3, [r7, #4]
2000031a:	b2da      	uxtb	r2, r3
2000031c:	210f      	movs	r1, #15
2000031e:	187b      	adds	r3, r7, r1
20000320:	3a01      	subs	r2, #1
20000322:	701a      	strb	r2, [r3, #0]
	if(y == 2){
20000324:	683b      	ldr	r3, [r7, #0]
20000326:	2b02      	cmp	r3, #2
20000328:	d104      	bne.n	20000334 <ascii_gotoxy+0x32>
		adress += 0x40;
2000032a:	187b      	adds	r3, r7, r1
2000032c:	187a      	adds	r2, r7, r1
2000032e:	7812      	ldrb	r2, [r2, #0]
20000330:	3240      	adds	r2, #64	; 0x40
20000332:	701a      	strb	r2, [r3, #0]
	}
	ascii_command(0x80 | adress);
20000334:	230f      	movs	r3, #15
20000336:	18fb      	adds	r3, r7, r3
20000338:	781b      	ldrb	r3, [r3, #0]
2000033a:	2280      	movs	r2, #128	; 0x80
2000033c:	4252      	negs	r2, r2
2000033e:	4313      	orrs	r3, r2
20000340:	b2db      	uxtb	r3, r3
20000342:	0018      	movs	r0, r3
20000344:	f7ff ffa8 	bl	20000298 <ascii_command>
}
20000348:	46c0      	nop			; (mov r8, r8)
2000034a:	46bd      	mov	sp, r7
2000034c:	b004      	add	sp, #16
2000034e:	bd80      	pop	{r7, pc}

20000350 <ascii_write_char>:

void ascii_write_char(unsigned char c){
20000350:	b580      	push	{r7, lr}
20000352:	b082      	sub	sp, #8
20000354:	af00      	add	r7, sp, #0
20000356:	0002      	movs	r2, r0
20000358:	1dfb      	adds	r3, r7, #7
2000035a:	701a      	strb	r2, [r3, #0]
	while(ascii_read_status() & 0x80 == 0x80){}
2000035c:	46c0      	nop			; (mov r8, r8)
2000035e:	f7ff ff7b 	bl	20000258 <ascii_read_status>
20000362:	0003      	movs	r3, r0
20000364:	001a      	movs	r2, r3
20000366:	2301      	movs	r3, #1
20000368:	4013      	ands	r3, r2
2000036a:	d1f8      	bne.n	2000035e <ascii_write_char+0xe>
	delayMikro(8);
2000036c:	2008      	movs	r0, #8
2000036e:	f7ff fe73 	bl	20000058 <delayMikro>
	ascii_write_data(c);
20000372:	1dfb      	adds	r3, r7, #7
20000374:	781b      	ldrb	r3, [r3, #0]
20000376:	0018      	movs	r0, r3
20000378:	f7ff ff07 	bl	2000018a <ascii_write_data>
	delayMikro(50);
2000037c:	2032      	movs	r0, #50	; 0x32
2000037e:	f7ff fe6b 	bl	20000058 <delayMikro>
}
20000382:	46c0      	nop			; (mov r8, r8)
20000384:	46bd      	mov	sp, r7
20000386:	b002      	add	sp, #8
20000388:	bd80      	pop	{r7, pc}

2000038a <init_app>:

void init_app(){
2000038a:	b580      	push	{r7, lr}
2000038c:	af00      	add	r7, sp, #0
	#ifdef USBDM
	*((unsigned long*) 0x40023830) = 0x18;
2000038e:	4b05      	ldr	r3, [pc, #20]	; (200003a4 <init_app+0x1a>)
20000390:	2218      	movs	r2, #24
20000392:	601a      	str	r2, [r3, #0]
	__asm volatile(" LDR R0,=0x08000209 \n BLX R0 \n");
20000394:	4827      	ldr	r0, [pc, #156]	; (20000434 <main+0x84>)
20000396:	4780      	blx	r0
	#endif
	* portModer = 0x55555555;
20000398:	4b03      	ldr	r3, [pc, #12]	; (200003a8 <init_app+0x1e>)
2000039a:	4a04      	ldr	r2, [pc, #16]	; (200003ac <init_app+0x22>)
2000039c:	601a      	str	r2, [r3, #0]
}
2000039e:	46c0      	nop			; (mov r8, r8)
200003a0:	46bd      	mov	sp, r7
200003a2:	bd80      	pop	{r7, pc}
200003a4:	40023830 	andmi	r3, r2, r0, lsr r8
200003a8:	40021000 	andmi	r1, r2, r0
200003ac:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

200003b0 <main>:

void main(void){
200003b0:	b5b0      	push	{r4, r5, r7, lr}
200003b2:	b088      	sub	sp, #32
200003b4:	af00      	add	r7, sp, #0
	char * s;
	char test1[] = "Antiloper";
200003b6:	2410      	movs	r4, #16
200003b8:	193b      	adds	r3, r7, r4
200003ba:	4a1c      	ldr	r2, [pc, #112]	; (2000042c <main+0x7c>)
200003bc:	ca03      	ldmia	r2!, {r0, r1}
200003be:	c303      	stmia	r3!, {r0, r1}
200003c0:	8812      	ldrh	r2, [r2, #0]
200003c2:	801a      	strh	r2, [r3, #0]
	char test2[] = "Display - test";
200003c4:	003b      	movs	r3, r7
200003c6:	4a1a      	ldr	r2, [pc, #104]	; (20000430 <main+0x80>)
200003c8:	ca23      	ldmia	r2!, {r0, r1, r5}
200003ca:	c323      	stmia	r3!, {r0, r1, r5}
200003cc:	8811      	ldrh	r1, [r2, #0]
200003ce:	8019      	strh	r1, [r3, #0]
200003d0:	7892      	ldrb	r2, [r2, #2]
200003d2:	709a      	strb	r2, [r3, #2]
	
	init_app();
200003d4:	f7ff ffd9 	bl	2000038a <init_app>
	ascii_init();
200003d8:	f7ff ff7c 	bl	200002d4 <ascii_init>
	ascii_gotoxy(1,1);
200003dc:	2101      	movs	r1, #1
200003de:	2001      	movs	r0, #1
200003e0:	f7ff ff8f 	bl	20000302 <ascii_gotoxy>
	s = test1;
200003e4:	193b      	adds	r3, r7, r4
200003e6:	61fb      	str	r3, [r7, #28]
	while(*s){
200003e8:	e006      	b.n	200003f8 <main+0x48>
		ascii_write_char(*s++);
200003ea:	69fb      	ldr	r3, [r7, #28]
200003ec:	1c5a      	adds	r2, r3, #1
200003ee:	61fa      	str	r2, [r7, #28]
200003f0:	781b      	ldrb	r3, [r3, #0]
200003f2:	0018      	movs	r0, r3
200003f4:	f7ff ffac 	bl	20000350 <ascii_write_char>
	while(*s){
200003f8:	69fb      	ldr	r3, [r7, #28]
200003fa:	781b      	ldrb	r3, [r3, #0]
200003fc:	2b00      	cmp	r3, #0
200003fe:	d1f4      	bne.n	200003ea <main+0x3a>
	}
	ascii_gotoxy(1,2);
20000400:	2102      	movs	r1, #2
20000402:	2001      	movs	r0, #1
20000404:	f7ff ff7d 	bl	20000302 <ascii_gotoxy>
	s=test2;
20000408:	003b      	movs	r3, r7
2000040a:	61fb      	str	r3, [r7, #28]
	while(*s){
2000040c:	e006      	b.n	2000041c <main+0x6c>
		ascii_write_char(*s++);
2000040e:	69fb      	ldr	r3, [r7, #28]
20000410:	1c5a      	adds	r2, r3, #1
20000412:	61fa      	str	r2, [r7, #28]
20000414:	781b      	ldrb	r3, [r3, #0]
20000416:	0018      	movs	r0, r3
20000418:	f7ff ff9a 	bl	20000350 <ascii_write_char>
	while(*s){
2000041c:	69fb      	ldr	r3, [r7, #28]
2000041e:	781b      	ldrb	r3, [r3, #0]
20000420:	2b00      	cmp	r3, #0
20000422:	d1f4      	bne.n	2000040e <main+0x5e>
	}
	return 0;
20000424:	46c0      	nop			; (mov r8, r8)
}
20000426:	46bd      	mov	sp, r7
20000428:	b008      	add	sp, #32
2000042a:	bdb0      	pop	{r4, r5, r7, pc}
2000042c:	20000550 	andcs	r0, r0, r0, asr r5
20000430:	2000055c 	andcs	r0, r0, ip, asr r5
20000434:	08000209 	stmdaeq	r0, {r0, r3, r9}

20000438 <__udivsi3>:
20000438:	2200      	movs	r2, #0
2000043a:	0843      	lsrs	r3, r0, #1
2000043c:	428b      	cmp	r3, r1
2000043e:	d374      	bcc.n	2000052a <__udivsi3+0xf2>
20000440:	0903      	lsrs	r3, r0, #4
20000442:	428b      	cmp	r3, r1
20000444:	d35f      	bcc.n	20000506 <__udivsi3+0xce>
20000446:	0a03      	lsrs	r3, r0, #8
20000448:	428b      	cmp	r3, r1
2000044a:	d344      	bcc.n	200004d6 <__udivsi3+0x9e>
2000044c:	0b03      	lsrs	r3, r0, #12
2000044e:	428b      	cmp	r3, r1
20000450:	d328      	bcc.n	200004a4 <__udivsi3+0x6c>
20000452:	0c03      	lsrs	r3, r0, #16
20000454:	428b      	cmp	r3, r1
20000456:	d30d      	bcc.n	20000474 <__udivsi3+0x3c>
20000458:	22ff      	movs	r2, #255	; 0xff
2000045a:	0209      	lsls	r1, r1, #8
2000045c:	ba12      	rev	r2, r2
2000045e:	0c03      	lsrs	r3, r0, #16
20000460:	428b      	cmp	r3, r1
20000462:	d302      	bcc.n	2000046a <__udivsi3+0x32>
20000464:	1212      	asrs	r2, r2, #8
20000466:	0209      	lsls	r1, r1, #8
20000468:	d065      	beq.n	20000536 <__udivsi3+0xfe>
2000046a:	0b03      	lsrs	r3, r0, #12
2000046c:	428b      	cmp	r3, r1
2000046e:	d319      	bcc.n	200004a4 <__udivsi3+0x6c>
20000470:	e000      	b.n	20000474 <__udivsi3+0x3c>
20000472:	0a09      	lsrs	r1, r1, #8
20000474:	0bc3      	lsrs	r3, r0, #15
20000476:	428b      	cmp	r3, r1
20000478:	d301      	bcc.n	2000047e <__udivsi3+0x46>
2000047a:	03cb      	lsls	r3, r1, #15
2000047c:	1ac0      	subs	r0, r0, r3
2000047e:	4152      	adcs	r2, r2
20000480:	0b83      	lsrs	r3, r0, #14
20000482:	428b      	cmp	r3, r1
20000484:	d301      	bcc.n	2000048a <__udivsi3+0x52>
20000486:	038b      	lsls	r3, r1, #14
20000488:	1ac0      	subs	r0, r0, r3
2000048a:	4152      	adcs	r2, r2
2000048c:	0b43      	lsrs	r3, r0, #13
2000048e:	428b      	cmp	r3, r1
20000490:	d301      	bcc.n	20000496 <__udivsi3+0x5e>
20000492:	034b      	lsls	r3, r1, #13
20000494:	1ac0      	subs	r0, r0, r3
20000496:	4152      	adcs	r2, r2
20000498:	0b03      	lsrs	r3, r0, #12
2000049a:	428b      	cmp	r3, r1
2000049c:	d301      	bcc.n	200004a2 <__udivsi3+0x6a>
2000049e:	030b      	lsls	r3, r1, #12
200004a0:	1ac0      	subs	r0, r0, r3
200004a2:	4152      	adcs	r2, r2
200004a4:	0ac3      	lsrs	r3, r0, #11
200004a6:	428b      	cmp	r3, r1
200004a8:	d301      	bcc.n	200004ae <__udivsi3+0x76>
200004aa:	02cb      	lsls	r3, r1, #11
200004ac:	1ac0      	subs	r0, r0, r3
200004ae:	4152      	adcs	r2, r2
200004b0:	0a83      	lsrs	r3, r0, #10
200004b2:	428b      	cmp	r3, r1
200004b4:	d301      	bcc.n	200004ba <__udivsi3+0x82>
200004b6:	028b      	lsls	r3, r1, #10
200004b8:	1ac0      	subs	r0, r0, r3
200004ba:	4152      	adcs	r2, r2
200004bc:	0a43      	lsrs	r3, r0, #9
200004be:	428b      	cmp	r3, r1
200004c0:	d301      	bcc.n	200004c6 <__udivsi3+0x8e>
200004c2:	024b      	lsls	r3, r1, #9
200004c4:	1ac0      	subs	r0, r0, r3
200004c6:	4152      	adcs	r2, r2
200004c8:	0a03      	lsrs	r3, r0, #8
200004ca:	428b      	cmp	r3, r1
200004cc:	d301      	bcc.n	200004d2 <__udivsi3+0x9a>
200004ce:	020b      	lsls	r3, r1, #8
200004d0:	1ac0      	subs	r0, r0, r3
200004d2:	4152      	adcs	r2, r2
200004d4:	d2cd      	bcs.n	20000472 <__udivsi3+0x3a>
200004d6:	09c3      	lsrs	r3, r0, #7
200004d8:	428b      	cmp	r3, r1
200004da:	d301      	bcc.n	200004e0 <__udivsi3+0xa8>
200004dc:	01cb      	lsls	r3, r1, #7
200004de:	1ac0      	subs	r0, r0, r3
200004e0:	4152      	adcs	r2, r2
200004e2:	0983      	lsrs	r3, r0, #6
200004e4:	428b      	cmp	r3, r1
200004e6:	d301      	bcc.n	200004ec <__udivsi3+0xb4>
200004e8:	018b      	lsls	r3, r1, #6
200004ea:	1ac0      	subs	r0, r0, r3
200004ec:	4152      	adcs	r2, r2
200004ee:	0943      	lsrs	r3, r0, #5
200004f0:	428b      	cmp	r3, r1
200004f2:	d301      	bcc.n	200004f8 <__udivsi3+0xc0>
200004f4:	014b      	lsls	r3, r1, #5
200004f6:	1ac0      	subs	r0, r0, r3
200004f8:	4152      	adcs	r2, r2
200004fa:	0903      	lsrs	r3, r0, #4
200004fc:	428b      	cmp	r3, r1
200004fe:	d301      	bcc.n	20000504 <__udivsi3+0xcc>
20000500:	010b      	lsls	r3, r1, #4
20000502:	1ac0      	subs	r0, r0, r3
20000504:	4152      	adcs	r2, r2
20000506:	08c3      	lsrs	r3, r0, #3
20000508:	428b      	cmp	r3, r1
2000050a:	d301      	bcc.n	20000510 <__udivsi3+0xd8>
2000050c:	00cb      	lsls	r3, r1, #3
2000050e:	1ac0      	subs	r0, r0, r3
20000510:	4152      	adcs	r2, r2
20000512:	0883      	lsrs	r3, r0, #2
20000514:	428b      	cmp	r3, r1
20000516:	d301      	bcc.n	2000051c <__udivsi3+0xe4>
20000518:	008b      	lsls	r3, r1, #2
2000051a:	1ac0      	subs	r0, r0, r3
2000051c:	4152      	adcs	r2, r2
2000051e:	0843      	lsrs	r3, r0, #1
20000520:	428b      	cmp	r3, r1
20000522:	d301      	bcc.n	20000528 <__udivsi3+0xf0>
20000524:	004b      	lsls	r3, r1, #1
20000526:	1ac0      	subs	r0, r0, r3
20000528:	4152      	adcs	r2, r2
2000052a:	1a41      	subs	r1, r0, r1
2000052c:	d200      	bcs.n	20000530 <__udivsi3+0xf8>
2000052e:	4601      	mov	r1, r0
20000530:	4152      	adcs	r2, r2
20000532:	4610      	mov	r0, r2
20000534:	4770      	bx	lr
20000536:	e7ff      	b.n	20000538 <__udivsi3+0x100>
20000538:	b501      	push	{r0, lr}
2000053a:	2000      	movs	r0, #0
2000053c:	f000 f806 	bl	2000054c <__aeabi_idiv0>
20000540:	bd02      	pop	{r1, pc}
20000542:	46c0      	nop			; (mov r8, r8)

20000544 <__aeabi_uidivmod>:
20000544:	2900      	cmp	r1, #0
20000546:	d0f7      	beq.n	20000538 <__udivsi3+0x100>
20000548:	e776      	b.n	20000438 <__udivsi3>
2000054a:	4770      	bx	lr

2000054c <__aeabi_idiv0>:
2000054c:	4770      	bx	lr
2000054e:	46c0      	nop			; (mov r8, r8)
20000550:	69746e41 	ldmdbvs	r4!, {r0, r6, r9, sl, fp, sp, lr}^
20000554:	65706f6c 	ldrbvs	r6, [r0, #-3948]!	; 0xfffff094
20000558:	00000072 	andeq	r0, r0, r2, ror r0
2000055c:	70736944 	rsbsvc	r6, r3, r4, asr #18
20000560:	2079616c 	rsbscs	r6, r9, ip, ror #2
20000564:	6574202d 	ldrbvs	r2, [r4, #-45]!	; 0xffffffd3
20000568:	00007473 	andeq	r7, r0, r3, ror r4

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	00000350 	andeq	r0, r0, r0, asr r3
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	000000a6 	andeq	r0, r0, r6, lsr #1
  10:	0000460c 	andeq	r4, r0, ip, lsl #12
  14:	00020b00 	andeq	r0, r2, r0, lsl #22
	...
  24:	08010200 	stmdaeq	r1, {r9}
  28:	0000018c 	andeq	r0, r0, ip, lsl #3
  2c:	00019a03 	andeq	r9, r1, r3, lsl #20
  30:	06b20100 	ldrteq	r0, [r2], r0, lsl #2
  34:	200003b0 			; <UNDEFINED> instruction: 0x200003b0
  38:	00000084 	andeq	r0, r0, r4, lsl #1
  3c:	006e9c01 	rsbeq	r9, lr, r1, lsl #24
  40:	73040000 	movwvc	r0, #16384	; 0x4000
  44:	09b30100 	ldmibeq	r3!, {r8}
  48:	0000006e 	andeq	r0, r0, lr, rrx
  4c:	056c9102 	strbeq	r9, [ip, #-258]!	; 0xfffffefe
  50:	000001b5 			; <UNDEFINED> instruction: 0x000001b5
  54:	7b07b401 	blvc	1ed060 <startup-0x1fe12fa0>
  58:	02000000 	andeq	r0, r0, #0
  5c:	bb056091 	bllt	1582a8 <startup-0x1fea7d58>
  60:	01000001 	tsteq	r0, r1
  64:	009207b5 			; <UNDEFINED> instruction: 0x009207b5
  68:	91020000 	mrsls	r0, (UNDEF: 2)
  6c:	04060050 	streq	r0, [r6], #-80	; 0xffffffb0
  70:	00000074 	andeq	r0, r0, r4, ror r0
  74:	95080102 	strls	r0, [r8, #-258]	; 0xfffffefe
  78:	07000001 	streq	r0, [r0, -r1]
  7c:	00000074 	andeq	r0, r0, r4, ror r0
  80:	0000008b 	andeq	r0, r0, fp, lsl #1
  84:	00008b08 	andeq	r8, r0, r8, lsl #22
  88:	02000900 	andeq	r0, r0, #0, 18
  8c:	000d0704 	andeq	r0, sp, r4, lsl #14
  90:	74070000 	strvc	r0, [r7], #-0
  94:	a2000000 	andge	r0, r0, #0
  98:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
  9c:	0000008b 	andeq	r0, r0, fp, lsl #1
  a0:	9f09000e 	svcls	0x0009000e
  a4:	01000001 	tsteq	r0, r1
  a8:	038a06aa 	orreq	r0, sl, #178257920	; 0xaa00000
  ac:	00262000 	eoreq	r2, r6, r0
  b0:	9c010000 	stcls	0, cr0, [r1], {-0}
  b4:	0001e703 	andeq	lr, r1, r3, lsl #14
  b8:	06a30100 	strteq	r0, [r3], r0, lsl #2
  bc:	20000350 	andcs	r0, r0, r0, asr r3
  c0:	0000003a 	andeq	r0, r0, sl, lsr r0
  c4:	00d89c01 	sbcseq	r9, r8, r1, lsl #24
  c8:	630a0000 	movwvs	r0, #40960	; 0xa000
  cc:	25a30100 	strcs	r0, [r3, #256]!	; 0x100
  d0:	00000025 	andeq	r0, r0, r5, lsr #32
  d4:	00779102 	rsbseq	r9, r7, r2, lsl #2
  d8:	00000003 	andeq	r0, r0, r3
  dc:	06990100 	ldreq	r0, [r9], r0, lsl #2
  e0:	20000302 	andcs	r0, r0, r2, lsl #6
  e4:	0000004e 	andeq	r0, r0, lr, asr #32
  e8:	01189c01 	tsteq	r8, r1, lsl #24
  ec:	780a0000 	stmdavc	sl, {}	; <UNPREDICTABLE>
  f0:	17990100 	ldrne	r0, [r9, r0, lsl #2]
  f4:	00000118 	andeq	r0, r0, r8, lsl r1
  f8:	0a6c9102 	beq	1b24508 <startup-0x1e4dbaf8>
  fc:	99010079 	stmdbls	r1, {r0, r3, r4, r5, r6}
 100:	0001181e 	andeq	r1, r1, lr, lsl r8
 104:	68910200 	ldmvs	r1, {r9}
 108:	00014505 	andeq	r4, r1, r5, lsl #10
 10c:	109c0100 	addsne	r0, ip, r0, lsl #2
 110:	00000025 	andeq	r0, r0, r5, lsr #32
 114:	00779102 	rsbseq	r9, r7, r2, lsl #2
 118:	6905040b 	stmdbvs	r5, {r0, r1, r3, sl}
 11c:	0c00746e 	cfstrseq	mvf7, [r0], {110}	; 0x6e
 120:	00000261 	andeq	r0, r0, r1, ror #4
 124:	d4069001 	strle	r9, [r6], #-1
 128:	2e200002 	cdpcs	0, 2, cr0, cr0, cr2, {0}
 12c:	01000000 	mrseq	r0, (UNDEF: 0)
 130:	0158039c 			; <UNDEFINED> instruction: 0x0158039c
 134:	89010000 	stmdbhi	r1, {}	; <UNPREDICTABLE>
 138:	00029806 	andeq	r9, r2, r6, lsl #16
 13c:	00003c20 	andeq	r3, r0, r0, lsr #24
 140:	579c0100 	ldrpl	r0, [ip, r0, lsl #2]
 144:	0d000001 	stceq	0, cr0, [r0, #-4]
 148:	0000015e 	andeq	r0, r0, lr, asr r1
 14c:	25228901 	strcs	r8, [r2, #-2305]!	; 0xfffff6ff
 150:	02000000 	andeq	r0, r0, #0
 154:	0e007791 	mcreq	7, 0, r7, cr0, cr1, {4}
 158:	00000122 	andeq	r0, r0, r2, lsr #2
 15c:	250f7f01 	strcs	r7, [pc, #-3841]	; fffff263 <__aeabi_idiv0+0xdfffed17>
 160:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
 164:	40200002 	eormi	r0, r0, r2
 168:	01000000 	mrseq	r0, (UNDEF: 0)
 16c:	0001809c 	muleq	r1, ip, r0
 170:	76720400 	ldrbtvc	r0, [r2], -r0, lsl #8
 174:	10810100 	addne	r0, r1, r0, lsl #2
 178:	00000025 	andeq	r0, r0, r5, lsr #32
 17c:	006f9102 	rsbeq	r9, pc, r2, lsl #2
 180:	00017c0e 	andeq	r7, r1, lr, lsl #24
 184:	0f750100 	svceq	0x00750100
 188:	00000025 	andeq	r0, r0, r5, lsr #32
 18c:	20000218 	andcs	r0, r0, r8, lsl r2
 190:	00000040 	andeq	r0, r0, r0, asr #32
 194:	01a99c01 			; <UNDEFINED> instruction: 0x01a99c01
 198:	72040000 	andvc	r0, r4, #0
 19c:	77010076 	smlsdxvc	r1, r6, r0, r0
 1a0:	00002510 	andeq	r2, r0, r0, lsl r5
 1a4:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
 1a8:	01660e00 	cmneq	r6, r0, lsl #28
 1ac:	6b010000 	blvs	401b4 <startup-0x1ffbfe4c>
 1b0:	0000250f 	andeq	r2, r0, pc, lsl #10
 1b4:	0001e400 	andeq	lr, r1, r0, lsl #8
 1b8:	00003420 	andeq	r3, r0, r0, lsr #8
 1bc:	d29c0100 	addsle	r0, ip, #0, 2
 1c0:	04000001 	streq	r0, [r0], #-1
 1c4:	01007672 	tsteq	r0, r2, ror r6
 1c8:	0025106c 	eoreq	r1, r5, ip, rrx
 1cc:	91020000 	mrsls	r0, (UNDEF: 2)
 1d0:	2f030077 	svccs	0x00030077
 1d4:	01000000 	mrseq	r0, (UNDEF: 0)
 1d8:	01b40662 			; <UNDEFINED> instruction: 0x01b40662
 1dc:	00302000 	eorseq	r2, r0, r0
 1e0:	9c010000 	stcls	0, cr0, [r1], {-0}
 1e4:	000001f8 	strdeq	r0, [r0], -r8
 1e8:	00015e0d 	andeq	r5, r1, sp, lsl #28
 1ec:	2b620100 	blcs	18805f4 <startup-0x1e77fa0c>
 1f0:	00000025 	andeq	r0, r0, r5, lsr #32
 1f4:	00779102 	rsbseq	r9, r7, r2, lsl #2
 1f8:	00013403 	andeq	r3, r1, r3, lsl #8
 1fc:	065c0100 	ldrbeq	r0, [ip], -r0, lsl #2
 200:	2000018a 	andcs	r0, r0, sl, lsl #3
 204:	0000002a 	andeq	r0, r0, sl, lsr #32
 208:	022c9c01 	eoreq	r9, ip, #256	; 0x100
 20c:	870d0000 	strhi	r0, [sp, -r0]
 210:	01000001 	tsteq	r0, r1
 214:	0025255c 	eoreq	r2, r5, ip, asr r5
 218:	91020000 	mrsls	r0, (UNDEF: 2)
 21c:	002f0f77 	eoreq	r0, pc, r7, ror pc	; <UNPREDICTABLE>
 220:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
 224:	00011802 	andeq	r1, r1, r2, lsl #16
 228:	00001000 	andeq	r1, r0, r0
 22c:	0001c103 	andeq	ip, r1, r3, lsl #2
 230:	06560100 	ldrbeq	r0, [r6], -r0, lsl #2
 234:	20000160 	andcs	r0, r0, r0, ror #2
 238:	0000002a 	andeq	r0, r0, sl, lsr #32
 23c:	02609c01 	rsbeq	r9, r0, #256	; 0x100
 240:	5e0d0000 	cdppl	0, 0, cr0, cr13, cr0, {0}
 244:	01000001 	tsteq	r0, r1
 248:	00252456 	eoreq	r2, r5, r6, asr r4
 24c:	91020000 	mrsls	r0, (UNDEF: 2)
 250:	002f0f77 	eoreq	r0, pc, r7, ror pc	; <UNPREDICTABLE>
 254:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
 258:	00011802 	andeq	r1, r1, r2, lsl #16
 25c:	00001000 	andeq	r1, r0, r0
 260:	00001a11 	andeq	r1, r0, r1, lsl sl
 264:	06500100 	ldrbeq	r0, [r0], -r0, lsl #2
 268:	20000118 	andcs	r0, r0, r8, lsl r1
 26c:	00000048 	andeq	r0, r0, r8, asr #32
 270:	02939c01 	addseq	r9, r3, #256	; 0x100
 274:	780a0000 	stmdavc	sl, {}	; <UNPREDICTABLE>
 278:	29500100 	ldmdbcs	r0, {r8}^
 27c:	00000025 	andeq	r0, r0, r5, lsr #32
 280:	056f9102 	strbeq	r9, [pc, #-258]!	; 186 <startup-0x1ffffe7a>
 284:	000001b0 			; <UNDEFINED> instruction: 0x000001b0
 288:	74075101 	strvc	r5, [r7], #-257	; 0xfffffeff
 28c:	02000000 	andeq	r0, r0, #0
 290:	11007791 			; <UNDEFINED> instruction: 0x11007791
 294:	000001f8 	strdeq	r0, [r0], -r8
 298:	e8064c01 	stmda	r6, {r0, sl, fp, lr}
 29c:	30200000 	eorcc	r0, r0, r0
 2a0:	01000000 	mrseq	r0, (UNDEF: 0)
 2a4:	0002b79c 	muleq	r2, ip, r7
 2a8:	00780a00 	rsbseq	r0, r8, r0, lsl #20
 2ac:	25274c01 	strcs	r4, [r7, #-3073]!	; 0xfffff3ff
 2b0:	02000000 	andeq	r0, r0, #0
 2b4:	03007791 	movweq	r7, #1937	; 0x791
 2b8:	000001d1 	ldrdeq	r0, [r0], -r1
 2bc:	9a064101 	bls	1906c8 <startup-0x1fe6f938>
 2c0:	4e200000 	cdpmi	0, 2, cr0, cr0, cr0, {0}
 2c4:	01000000 	mrseq	r0, (UNDEF: 0)
 2c8:	0002f39c 	muleq	r2, ip, r3
 2cc:	736d0a00 	cmnvc	sp, #0, 20
 2d0:	1e410100 	dvfnes	f0, f1, f0
 2d4:	0000008b 	andeq	r0, r0, fp, lsl #1
 2d8:	126c9102 	rsbne	r9, ip, #-2147483648	; 0x80000000
 2dc:	200000b8 	strhcs	r0, [r0], -r8
 2e0:	00000026 	andeq	r0, r0, r6, lsr #32
 2e4:	01006904 	tsteq	r0, r4, lsl #18
 2e8:	01180a47 	tsteq	r8, r7, asr #20
 2ec:	91020000 	mrsls	r0, (UNDEF: 2)
 2f0:	03000074 	movweq	r0, #116	; 0x74
 2f4:	000001dc 	ldrdeq	r0, [r0], -ip
 2f8:	58063601 	stmdapl	r6, {r0, r9, sl, ip, sp}
 2fc:	42200000 	eormi	r0, r0, #0
 300:	01000000 	mrseq	r0, (UNDEF: 0)
 304:	00032f9c 	muleq	r3, ip, pc	; <UNPREDICTABLE>
 308:	73750a00 	cmnvc	r5, #0, 20
 30c:	1e360100 	rsfnes	f0, f6, f0
 310:	0000008b 	andeq	r0, r0, fp, lsl #1
 314:	126c9102 	rsbne	r9, ip, #-2147483648	; 0x80000000
 318:	20000076 	andcs	r0, r0, r6, ror r0
 31c:	0000001a 	andeq	r0, r0, sl, lsl r0
 320:	01006904 	tsteq	r0, r4, lsl #18
 324:	01180a3c 	tsteq	r8, ip, lsr sl
 328:	91020000 	mrsls	r0, (UNDEF: 2)
 32c:	09000074 	stmdbeq	r0, {r2, r4, r5, r6}
 330:	0000014c 	andeq	r0, r0, ip, asr #2
 334:	10062d01 	andne	r2, r6, r1, lsl #26
 338:	48200000 	stmdami	r0!, {}	; <UNPREDICTABLE>
 33c:	01000000 	mrseq	r0, (UNDEF: 0)
 340:	01a8139c 			; <UNDEFINED> instruction: 0x01a8139c
 344:	25010000 	strcs	r0, [r1, #-0]
 348:	00000006 	andeq	r0, r0, r6
 34c:	00000c20 	andeq	r0, r0, r0, lsr #24
 350:	009c0100 	addseq	r0, ip, r0, lsl #2

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23
  14:	0b0b0024 	bleq	2c00ac <startup-0x1fd3ff54>
  18:	0e030b3e 	vmoveq.16	d3[0], r0
  1c:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
  20:	03193f01 	tsteq	r9, #1, 30
  24:	3b0b3a0e 	blcc	2ce864 <startup-0x1fd3179c>
  28:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
  2c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
  30:	96184006 	ldrls	r4, [r8], -r6
  34:	13011942 	movwne	r1, #6466	; 0x1942
  38:	34040000 	strcc	r0, [r4], #-0
  3c:	3a080300 	bcc	200c44 <startup-0x1fdff3bc>
  40:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  44:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  48:	05000018 	streq	r0, [r0, #-24]	; 0xffffffe8
  4c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
  50:	0b3b0b3a 	bleq	ec2d40 <startup-0x1f13d2c0>
  54:	13490b39 	movtne	r0, #39737	; 0x9b39
  58:	00001802 	andeq	r1, r0, r2, lsl #16
  5c:	0b000f06 	bleq	3c7c <startup-0x1fffc384>
  60:	0013490b 	andseq	r4, r3, fp, lsl #18
  64:	01010700 	tsteq	r1, r0, lsl #14
  68:	13011349 	movwne	r1, #4937	; 0x1349
  6c:	21080000 	mrscs	r0, (UNDEF: 8)
  70:	2f134900 	svccs	0x00134900
  74:	0900000b 	stmdbeq	r0, {r0, r1, r3}
  78:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
  7c:	0b3a0e03 	bleq	e83890 <startup-0x1f17c770>
  80:	0b390b3b 	bleq	e42d74 <startup-0x1f1bd28c>
  84:	06120111 			; <UNDEFINED> instruction: 0x06120111
  88:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
  8c:	0a000019 	beq	f8 <startup-0x1fffff08>
  90:	08030005 	stmdaeq	r3, {r0, r2}
  94:	0b3b0b3a 	bleq	ec2d84 <startup-0x1f13d27c>
  98:	13490b39 	movtne	r0, #39737	; 0x9b39
  9c:	00001802 	andeq	r1, r0, r2, lsl #16
  a0:	0b00240b 	bleq	90d4 <startup-0x1fff6f2c>
  a4:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  a8:	0c000008 	stceq	0, cr0, [r0], {8}
  ac:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
  b0:	0b3a0e03 	bleq	e838c4 <startup-0x1f17c73c>
  b4:	0b390b3b 	bleq	e42da8 <startup-0x1f1bd258>
  b8:	06120111 			; <UNDEFINED> instruction: 0x06120111
  bc:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
  c0:	0d000019 	stceq	0, cr0, [r0, #-100]	; 0xffffff9c
  c4:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
  c8:	0b3b0b3a 	bleq	ec2db8 <startup-0x1f13d248>
  cc:	13490b39 	movtne	r0, #39737	; 0x9b39
  d0:	00001802 	andeq	r1, r0, r2, lsl #16
  d4:	3f012e0e 	svccc	0x00012e0e
  d8:	3a0e0319 	bcc	380d44 <startup-0x1fc7f2bc>
  dc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  e0:	1113490b 	tstne	r3, fp, lsl #18
  e4:	40061201 	andmi	r1, r6, r1, lsl #4
  e8:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
  ec:	00001301 	andeq	r1, r0, r1, lsl #6
  f0:	3f012e0f 	svccc	0x00012e0f
  f4:	3a0e0319 	bcc	380d60 <startup-0x1fc7f2a0>
  f8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  fc:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
 100:	10000019 	andne	r0, r0, r9, lsl r0
 104:	00000018 	andeq	r0, r0, r8, lsl r0
 108:	3f012e11 	svccc	0x00012e11
 10c:	3a0e0319 	bcc	380d78 <startup-0x1fc7f288>
 110:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 114:	1119270b 	tstne	r9, fp, lsl #14
 118:	40061201 	andmi	r1, r6, r1, lsl #4
 11c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 120:	00001301 	andeq	r1, r0, r1, lsl #6
 124:	11010b12 	tstne	r1, r2, lsl fp
 128:	00061201 	andeq	r1, r6, r1, lsl #4
 12c:	002e1300 	eoreq	r1, lr, r0, lsl #6
 130:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 134:	0b3b0b3a 	bleq	ec2e24 <startup-0x1f13d1dc>
 138:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
 13c:	06120111 			; <UNDEFINED> instruction: 0x06120111
 140:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 144:	00000019 	andeq	r0, r0, r9, lsl r0

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	00000424 	andeq	r0, r0, r4, lsr #8
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	20000434 	andcs	r0, r0, r4, lsr r4
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	0000028b 	andeq	r0, r0, fp, lsl #5
   4:	00760003 	rsbseq	r0, r6, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	43010000 	movwmi	r0, #4096	; 0x1000
  1c:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
  20:	2f737265 	svccs	0x00737265
  24:	6e61736f 	cdpvs	3, 6, cr7, cr1, cr15, {3}
  28:	6f442f6e 	svcvs	0x00442f6e
  2c:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
  30:	2f73746e 	svccs	0x0073746e
  34:	50746947 	rsbspl	r6, r4, r7, asr #18
  38:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
  3c:	2f737463 	svccs	0x00737463
  40:	6f686353 	svcvs	0x00686353
  44:	72506c6f 	subsvc	r6, r0, #28416	; 0x6f00
  48:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
  4c:	442f7374 	strtmi	r7, [pc], #-884	; 54 <startup-0x1fffffac>
  50:	31305441 	teqcc	r0, r1, asr #8
  54:	734f2f37 	movtvc	r2, #65335	; 0xff37
  58:	73726163 	cmnvc	r2, #-1073741800	; 0xc0000018
  5c:	6262614c 	rsbvs	r6, r2, #76, 2
  60:	662f7261 	strtvs	r7, [pc], -r1, ror #4
  64:	50657669 	rsbpl	r7, r5, r9, ror #12
  68:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
  6c:	65766946 	ldrbvs	r6, [r6, #-2374]!	; 0xfffff6ba
  70:	74730000 	ldrbtvc	r0, [r3], #-0
  74:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
  78:	00632e70 	rsbeq	r2, r3, r0, ror lr
  7c:	00000001 	andeq	r0, r0, r1
  80:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
  84:	00000002 	andeq	r0, r0, r2
  88:	01250320 			; <UNDEFINED> instruction: 0x01250320
  8c:	2f212113 	svccs	0x00212113
  90:	00030221 	andeq	r0, r3, r1, lsr #4
  94:	13050101 	movwne	r0, #20737	; 0x5101
  98:	10020500 	andne	r0, r2, r0, lsl #10
  9c:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
  a0:	0205012c 	andeq	r0, r5, #44, 2
  a4:	200d052f 	andcs	r0, sp, pc, lsr #10
  a8:	052f0205 	streq	r0, [pc, #-517]!	; fffffeab <__aeabi_idiv0+0xdffff95f>
  ac:	0205200d 	andeq	r2, r5, #13
  b0:	200c052f 	andcs	r0, ip, pc, lsr #10
  b4:	052f0205 	streq	r0, [pc, #-517]!	; fffffeb7 <__aeabi_idiv0+0xdffff96b>
  b8:	0705200d 	streq	r2, [r5, -sp]
  bc:	0009052f 	andeq	r0, r9, pc, lsr #10
  c0:	20010402 	andcs	r0, r1, r2, lsl #8
  c4:	02001605 	andeq	r1, r0, #5242880	; 0x500000
  c8:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
  cc:	04020007 	streq	r0, [r2], #-7
  d0:	02053c01 	andeq	r3, r5, #256	; 0x100
  d4:	200d0521 	andcs	r0, sp, r1, lsr #10
  d8:	052f0105 	streq	r0, [pc, #-261]!	; ffffffdb <__aeabi_idiv0+0xdffffa8f>
  dc:	0605ae21 	streq	sl, [r5], -r1, lsr #28
  e0:	8305054c 	movwhi	r0, #21836	; 0x554c
  e4:	053f0a05 	ldreq	r0, [pc, #-2565]!	; fffff6e7 <__aeabi_idiv0+0xdffff19b>
  e8:	03052e02 	movweq	r2, #24066	; 0x5e02
  ec:	03040200 	movweq	r0, #16896	; 0x4200
  f0:	001c0521 	andseq	r0, ip, r1, lsr #10
  f4:	2d030402 	cfstrscs	mvf0, [r3, #-8]
  f8:	02001605 	andeq	r1, r0, #5242880	; 0x500000
  fc:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
 100:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
 104:	02052e01 	andeq	r2, r5, #1, 28
 108:	01040200 	mrseq	r0, R12_usr
 10c:	31010520 	tstcc	r1, r0, lsr #10
 110:	055a2105 	ldrbeq	r2, [sl, #-261]	; 0xfffffefb
 114:	05054c06 	streq	r4, [r5, #-3078]	; 0xfffff3fa
 118:	3f0a0583 	svccc	0x000a0583
 11c:	052e0205 	streq	r0, [lr, #-517]!	; 0xfffffdfb
 120:	04020003 	streq	r0, [r2], #-3
 124:	1f052103 	svcne	0x00052103
 128:	03040200 	movweq	r0, #16896	; 0x4200
 12c:	0019052d 	andseq	r0, r9, sp, lsr #10
 130:	3c010402 	cfstrscc	mvf0, [r1], {2}
 134:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
 138:	05820104 	streq	r0, [r2, #260]	; 0x104
 13c:	04020002 	streq	r0, [r2], #-2
 140:	01052001 	tsteq	r5, r1
 144:	5a290531 	bpl	a41610 <startup-0x1f5be9f0>
 148:	05671105 	strbeq	r1, [r7, #-261]!	; 0xfffffefb
 14c:	2b05bb01 	blcs	16ed58 <startup-0x1fe912a8>
 150:	67070568 	strvs	r0, [r7, -r8, ror #10]
 154:	91670f05 	cmnls	r7, r5, lsl #30
 158:	05830105 	streq	r0, [r3, #261]	; 0x105
 15c:	0205762c 	andeq	r7, r5, #44, 12	; 0x2c00000
 160:	053d3d67 	ldreq	r3, [sp, #-3431]!	; 0xfffff299
 164:	2a055901 	bcs	156570 <startup-0x1fea9a90>
 168:	6702054c 	strvs	r0, [r2, -ip, asr #10]
 16c:	01053d3d 	tsteq	r5, sp, lsr sp
 170:	4c330559 	cfldr32mi	mvfx0, [r3], #-356	; 0xfffffe9c
 174:	3d680205 	sfmcc	f0, 2, [r8, #-20]!	; 0xffffffec
 178:	05201005 	streq	r1, [r0, #-5]!
 17c:	053d3e02 	ldreq	r3, [sp, #-3586]!	; 0xfffff1fe
 180:	26052f01 	strcs	r2, [r5], -r1, lsl #30
 184:	3e020568 	cfsh32cc	mvfx0, mvfx2, #56
 188:	07052f3d 	smladxeq	r5, sp, pc, r2	; <UNPREDICTABLE>
 18c:	2005052f 	andcs	r0, r5, pc, lsr #10
 190:	053d0205 	ldreq	r0, [sp, #-517]!	; 0xfffffdfb
 194:	01053d09 	tsteq	r5, r9, lsl #26
 198:	7620052f 	strtvc	r0, [r0], -pc, lsr #10
 19c:	053d0205 	ldreq	r0, [sp, #-517]!	; 0xfffffdfb
 1a0:	0205200e 	andeq	r2, r5, #14
 1a4:	05053d30 	streq	r3, [r5, #-3376]	; 0xfffff2d0
 1a8:	3d02053d 	cfstr32cc	mvfx0, [r2, #-244]	; 0xffffff0c
 1ac:	05200e05 	streq	r0, [r0, #-3589]!	; 0xfffff1fb
 1b0:	01052f09 	tsteq	r5, r9, lsl #30
 1b4:	bc22052f 	cfstr32lt	mvfx0, [r2], #-188	; 0xffffff44
 1b8:	053d0205 	ldreq	r0, [sp, #-517]!	; 0xfffffdfb
 1bc:	0205200e 	andeq	r2, r5, #14
 1c0:	07053d30 	smladxeq	r5, r0, sp, r3
 1c4:	5902053d 	stmdbpl	r2, {r0, r2, r3, r4, r5, r8, sl}
 1c8:	05200e05 	streq	r0, [r0, #-3589]!	; 0xfffff1fb
 1cc:	01052f09 	tsteq	r5, r9, lsl #30
 1d0:	a02a052f 	eorge	r0, sl, pc, lsr #10
 1d4:	05670705 	strbeq	r0, [r7, #-1797]!	; 0xfffff8fb
 1d8:	04020009 	streq	r0, [r2], #-9
 1dc:	1d052001 	stcne	0, cr2, [r5, #-4]
 1e0:	01040200 	mrseq	r0, R12_usr
 1e4:	0007053c 	andeq	r0, r7, ip, lsr r5
 1e8:	3c010402 	cfstrscc	mvf0, [r1], {2}
 1ec:	3d2f0205 	sfmcc	f0, 4, [pc, #-20]!	; 1e0 <startup-0x1ffffe20>
 1f0:	3d010559 	cfstr32cc	mvfx0, [r1, #-356]	; 0xfffffe9c
 1f4:	054c1205 	strbeq	r1, [ip, #-517]	; 0xfffffdfb
 1f8:	3d3d2f02 	ldccc	15, cr2, [sp, #-8]!
 1fc:	053d3d3d 	ldreq	r3, [sp, #-3389]!	; 0xfffff2c3
 200:	20053d01 	andcs	r3, r5, r1, lsl #26
 204:	5902053e 	stmdbpl	r2, {r1, r2, r3, r4, r5, r8, sl}
 208:	3d1b053d 	cfldr32cc	mvfx0, [fp, #-244]	; 0xffffff0c
 20c:	052e1005 	streq	r1, [lr, #-5]!
 210:	0a054b04 	beq	152e28 <startup-0x1fead1d8>
 214:	5a02053d 	bpl	81710 <startup-0x1ff7e8f0>
 218:	059f0105 	ldreq	r0, [pc, #261]	; 325 <startup-0x1ffffcdb>
 21c:	07054c27 	streq	r4, [r5, -r7, lsr #24]
 220:	00080567 	andeq	r0, r8, r7, ror #10
 224:	20010402 	andcs	r0, r1, r2, lsl #8
 228:	02001c05 	andeq	r1, r0, #1280	; 0x500
 22c:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
 230:	04020007 	streq	r0, [r2], #-7
 234:	02053c01 	andeq	r3, r5, #256	; 0x100
 238:	05593d21 	ldrbeq	r3, [r9, #-3361]	; 0xfffff2df
 23c:	10053d01 	andne	r3, r5, r1, lsl #26
 240:	3002054c 	andcc	r0, r2, ip, asr #10
 244:	05202105 	streq	r2, [r0, #-261]!	; 0xfffffefb
 248:	05302f02 	ldreq	r2, [r0, #-3842]!	; 0xfffff0fe
 24c:	0105200e 	tsteq	r5, lr
 250:	9210052f 	andsls	r0, r0, #197132288	; 0xbc00000
 254:	753e0705 	ldrvc	r0, [lr, #-1797]!	; 0xfffff8fb
 258:	2f840205 	svccs	0x00840205
 25c:	4b04052f 	blmi	101720 <startup-0x1fefe8e0>
 260:	052f0705 	streq	r0, [pc, #-1797]!	; fffffb63 <__aeabi_idiv0+0xdffff617>
 264:	03052116 	movweq	r2, #20758	; 0x5116
 268:	4908053c 	stmdbmi	r8, {r2, r3, r4, r5, r8, sl}
 26c:	052e0705 	streq	r0, [lr, #-1797]!	; 0xfffff8fb
 270:	03053102 	movweq	r3, #20738	; 0x5102
 274:	2f07054b 	svccs	0x0007054b
 278:	05211605 	streq	r1, [r1, #-1541]!	; 0xfffff9fb
 27c:	08053c03 	stmdaeq	r5, {r0, r1, sl, fp, ip, sp}
 280:	2e070549 	cfsh32cs	mvfx0, mvfx7, #41
 284:	05310905 	ldreq	r0, [r1, #-2309]!	; 0xfffff6fb
 288:	09022101 	stmdbeq	r2, {r0, r8, sp}
 28c:	Address 0x0000028c is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
   4:	6f675f69 	svcvs	0x00675f69
   8:	79786f74 	ldmdbvc	r8!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
   c:	736e7500 	cmnvc	lr, #0, 10
  10:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
  14:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
  18:	73610074 	cmnvc	r1, #116	; 0x74
  1c:	5f696963 	svcpl	0x00696963
  20:	6c727463 	cfldrdvs	mvd7, [r2], #-396	; 0xfffffe74
  24:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
  28:	656c635f 	strbvs	r6, [ip, #-863]!	; 0xfffffca1
  2c:	61007261 	tstvs	r0, r1, ror #4
  30:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
  34:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
  38:	635f6574 	cmpvs	pc, #116, 10	; 0x1d000000
  3c:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
  40:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
  44:	3a430072 	bcc	10c0214 <startup-0x1ef3fdec>
  48:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
  4c:	6f2f7372 	svcvs	0x002f7372
  50:	6e6e6173 	mcrvs	1, 3, r6, cr14, cr3, {3}
  54:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
  58:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
  5c:	472f7374 			; <UNDEFINED> instruction: 0x472f7374
  60:	72507469 	subsvc	r7, r0, #1761607680	; 0x69000000
  64:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
  68:	532f7374 			; <UNDEFINED> instruction: 0x532f7374
  6c:	6f6f6863 	svcvs	0x006f6863
  70:	6f72506c 	svcvs	0x0072506c
  74:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
  78:	41442f73 	hvcmi	17139	; 0x42f3
  7c:	37313054 			; <UNDEFINED> instruction: 0x37313054
  80:	63734f2f 	cmnvs	r3, #47, 30	; 0xbc
  84:	4c737261 	lfmmi	f7, 2, [r3], #-388	; 0xfffffe7c
  88:	61626261 	cmnvs	r2, r1, ror #4
  8c:	69662f72 	stmdbvs	r6!, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
  90:	6f506576 	svcvs	0x00506576
  94:	46746e69 	ldrbtmi	r6, [r4], -r9, ror #28
  98:	2f657669 	svccs	0x00657669
  9c:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  a0:	2e707574 	mrccs	5, 3, r7, cr0, cr4, {3}
  a4:	4e470063 	cdpmi	0, 4, cr0, cr7, cr3, {3}
  a8:	39432055 	stmdbcc	r3, {r0, r2, r4, r6, sp}^
  ac:	2e392039 	mrccs	0, 1, r2, cr9, cr9, {1}
  b0:	20312e32 	eorscs	r2, r1, r2, lsr lr
  b4:	39313032 	ldmdbcc	r1!, {r1, r4, r5, ip, sp}
  b8:	35323031 	ldrcc	r3, [r2, #-49]!	; 0xffffffcf
  bc:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  c0:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  c4:	5b202965 	blpl	80a660 <startup-0x1f7f59a0>
  c8:	2f4d5241 	svccs	0x004d5241
  cc:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
  d0:	72622d39 	rsbvc	r2, r2, #3648	; 0xe40
  d4:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
  d8:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  dc:	6f697369 	svcvs	0x00697369
  e0:	3732206e 	ldrcc	r2, [r2, -lr, rrx]!
  e4:	39393537 	ldmdbcc	r9!, {r0, r1, r2, r4, r5, r8, sl, ip, sp}
  e8:	6d2d205d 	stcvs	0, cr2, [sp, #-372]!	; 0xfffffe8c
  ec:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
  f0:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
  f4:	616f6c66 	cmnvs	pc, r6, ror #24
  f8:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
  fc:	6f733d69 	svcvs	0x00733d69
 100:	2d207466 	cfstrscs	mvf7, [r0, #-408]!	; 0xfffffe68
 104:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
 108:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
 10c:	2d36766d 	ldccs	6, cr7, [r6, #-436]!	; 0xfffffe4c
 110:	672d206d 	strvs	r2, [sp, -sp, rrx]!
 114:	304f2d20 	subcc	r2, pc, r0, lsr #26
 118:	74732d20 	ldrbtvc	r2, [r3], #-3360	; 0xfffff2e0
 11c:	39633d64 	stmdbcc	r3!, {r2, r5, r6, r8, sl, fp, ip, sp}^
 120:	73610039 	cmnvc	r1, #57	; 0x39
 124:	5f696963 	svcpl	0x00696963
 128:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
 12c:	6174735f 	cmnvs	r4, pc, asr r3
 130:	00737574 	rsbseq	r7, r3, r4, ror r5
 134:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 138:	72775f69 	rsbsvc	r5, r7, #420	; 0x1a4
 13c:	5f657469 	svcpl	0x00657469
 140:	61746164 	cmnvs	r4, r4, ror #2
 144:	72646100 	rsbvc	r6, r4, #0, 2
 148:	00737365 	rsbseq	r7, r3, r5, ror #6
 14c:	616c6564 	cmnvs	ip, r4, ror #10
 150:	35325f79 	ldrcc	r5, [r2, #-3961]!	; 0xfffff087
 154:	00736e30 	rsbseq	r6, r3, r0, lsr lr
 158:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 15c:	6f635f69 	svcvs	0x00635f69
 160:	6e616d6d 	cdpvs	13, 6, cr6, cr1, cr13, {3}
 164:	73610064 	cmnvc	r1, #100	; 0x64
 168:	5f696963 	svcpl	0x00696963
 16c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
 170:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
 174:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; ffffffac <__aeabi_idiv0+0xdffffa60>
 178:	0072656c 	rsbseq	r6, r2, ip, ror #10
 17c:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 180:	65725f69 	ldrbvs	r5, [r2, #-3945]!	; 0xfffff097
 184:	645f6461 	ldrbvs	r6, [pc], #-1121	; 18c <startup-0x1ffffe74>
 188:	00617461 	rsbeq	r7, r1, r1, ror #8
 18c:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
 190:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
 194:	61686320 	cmnvs	r8, r0, lsr #6
 198:	616d0072 	smcvs	53250	; 0xd002
 19c:	69006e69 	stmdbvs	r0, {r0, r3, r5, r6, r9, sl, fp, sp, lr}
 1a0:	5f74696e 	svcpl	0x0074696e
 1a4:	00707061 	rsbseq	r7, r0, r1, rrx
 1a8:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 1ac:	00707574 	rsbseq	r7, r0, r4, ror r5
 1b0:	58746f6e 	ldmdapl	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 1b4:	73657400 	cmnvc	r5, #0, 8
 1b8:	74003174 	strvc	r3, [r0], #-372	; 0xfffffe8c
 1bc:	32747365 	rsbscc	r7, r4, #-1811939327	; 0x94000001
 1c0:	63736100 	cmnvs	r3, #0, 2
 1c4:	775f6969 	ldrbvc	r6, [pc, -r9, ror #18]
 1c8:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 1cc:	646d635f 	strbtvs	r6, [sp], #-863	; 0xfffffca1
 1d0:	6c656400 	cfstrdvs	mvd6, [r5], #-0
 1d4:	694d7961 	stmdbvs	sp, {r0, r5, r6, r8, fp, ip, sp, lr}^
 1d8:	00696c6c 	rsbeq	r6, r9, ip, ror #24
 1dc:	616c6564 	cmnvs	ip, r4, ror #10
 1e0:	6b694d79 	blvs	1a537cc <startup-0x1e5ac834>
 1e4:	61006f72 	tstvs	r0, r2, ror pc
 1e8:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 1ec:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
 1f0:	635f6574 	cmpvs	pc, #116, 10	; 0x1d000000
 1f4:	00726168 	rsbseq	r6, r2, r8, ror #2
 1f8:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 1fc:	74635f69 	strbtvc	r5, [r3], #-3945	; 0xfffff097
 200:	625f6c72 	subsvs	r6, pc, #29184	; 0x7200
 204:	735f7469 	cmpvc	pc, #1761607680	; 0x69000000
 208:	43007465 	movwmi	r7, #1125	; 0x465
 20c:	73555c3a 	cmpvc	r5, #14848	; 0x3a00
 210:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
 214:	6e61736f 	cdpvs	3, 6, cr7, cr1, cr15, {3}
 218:	6f445c6e 	svcvs	0x00445c6e
 21c:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 220:	5c73746e 	cfldrdpl	mvd7, [r3], #-440	; 0xfffffe48
 224:	50746947 	rsbspl	r6, r4, r7, asr #18
 228:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
 22c:	5c737463 	cfldrdpl	mvd7, [r3], #-396	; 0xfffffe74
 230:	6f686353 	svcvs	0x00686353
 234:	72506c6f 	subsvc	r6, r0, #28416	; 0x6f00
 238:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
 23c:	445c7374 	ldrbmi	r7, [ip], #-884	; 0xfffffc8c
 240:	31305441 	teqcc	r0, r1, asr #8
 244:	734f5c37 	movtvc	r5, #64567	; 0xfc37
 248:	73726163 	cmnvc	r2, #-1073741800	; 0xc0000018
 24c:	6262614c 	rsbvs	r6, r2, #76, 2
 250:	665c7261 	ldrbvs	r7, [ip], -r1, ror #4
 254:	50657669 	rsbpl	r7, r5, r9, ror #12
 258:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
 25c:	65766946 	ldrbvs	r6, [r6, #-2374]!	; 0xfffff6ba
 260:	63736100 	cmnvs	r3, #0, 2
 264:	695f6969 	ldmdbvs	pc, {r0, r3, r5, r6, r8, fp, sp, lr}^	; <UNPREDICTABLE>
 268:	0074696e 	rsbseq	r6, r4, lr, ror #18

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d39 	eorscc	r2, r2, r9, lsr sp
  30:	712d3931 			; <UNDEFINED> instruction: 0x712d3931
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	31393130 	teqcc	r9, r0, lsr r1
  48:	20353230 	eorscs	r3, r5, r0, lsr r2
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  5c:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  60:	6172622d 	cmnvs	r2, sp, lsr #4
  64:	2068636e 	rsbcs	r6, r8, lr, ror #6
  68:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  6c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  70:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  74:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002b41 	andeq	r2, r0, r1, asr #22
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000021 	andeq	r0, r0, r1, lsr #32
  10:	2d533605 	ldclcs	6, cr3, [r3, #-20]	; 0xffffffec
  14:	0c06004d 	stceq	0, cr0, [r6], {77}	; 0x4d
  18:	01094d07 	tsteq	r9, r7, lsl #26
  1c:	01140412 	tsteq	r4, r2, lsl r4
  20:	03170115 	tsteq	r7, #1073741829	; 0x40000005
  24:	01190118 	tsteq	r9, r8, lsl r1
  28:	061e011a 			; <UNDEFINED> instruction: 0x061e011a

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000048 	andeq	r0, r0, r8, asr #32
  30:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  34:	41018e02 	tstmi	r1, r2, lsl #28
  38:	0000070d 	andeq	r0, r0, sp, lsl #14
  3c:	0000001c 	andeq	r0, r0, ip, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	20000058 	andcs	r0, r0, r8, asr r0
  48:	00000042 	andeq	r0, r0, r2, asr #32
  4c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  50:	41018e02 	tstmi	r1, r2, lsl #28
  54:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
  58:	00000007 	andeq	r0, r0, r7
  5c:	0000001c 	andeq	r0, r0, ip, lsl r0
  60:	00000000 	andeq	r0, r0, r0
  64:	2000009a 	mulcs	r0, sl, r0
  68:	0000004e 	andeq	r0, r0, lr, asr #32
  6c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  70:	41018e02 	tstmi	r1, r2, lsl #28
  74:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
  78:	00000007 	andeq	r0, r0, r7
  7c:	0000001c 	andeq	r0, r0, ip, lsl r0
  80:	00000000 	andeq	r0, r0, r0
  84:	200000e8 	andcs	r0, r0, r8, ror #1
  88:	00000030 	andeq	r0, r0, r0, lsr r0
  8c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  90:	41018e02 	tstmi	r1, r2, lsl #28
  94:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  98:	00000007 	andeq	r0, r0, r7
  9c:	0000001c 	andeq	r0, r0, ip, lsl r0
  a0:	00000000 	andeq	r0, r0, r0
  a4:	20000118 	andcs	r0, r0, r8, lsl r1
  a8:	00000048 	andeq	r0, r0, r8, asr #32
  ac:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  b0:	41018e02 	tstmi	r1, r2, lsl #28
  b4:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
  b8:	00000007 	andeq	r0, r0, r7
  bc:	0000001c 	andeq	r0, r0, ip, lsl r0
  c0:	00000000 	andeq	r0, r0, r0
  c4:	20000160 	andcs	r0, r0, r0, ror #2
  c8:	0000002a 	andeq	r0, r0, sl, lsr #32
  cc:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  d0:	41018e02 	tstmi	r1, r2, lsl #28
  d4:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  d8:	00000007 	andeq	r0, r0, r7
  dc:	0000001c 	andeq	r0, r0, ip, lsl r0
  e0:	00000000 	andeq	r0, r0, r0
  e4:	2000018a 	andcs	r0, r0, sl, lsl #3
  e8:	0000002a 	andeq	r0, r0, sl, lsr #32
  ec:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  f0:	41018e02 	tstmi	r1, r2, lsl #28
  f4:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  f8:	00000007 	andeq	r0, r0, r7
  fc:	0000001c 	andeq	r0, r0, ip, lsl r0
 100:	00000000 	andeq	r0, r0, r0
 104:	200001b4 			; <UNDEFINED> instruction: 0x200001b4
 108:	00000030 	andeq	r0, r0, r0, lsr r0
 10c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 110:	41018e02 	tstmi	r1, r2, lsl #28
 114:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 118:	00000007 	andeq	r0, r0, r7
 11c:	0000001c 	andeq	r0, r0, ip, lsl r0
 120:	00000000 	andeq	r0, r0, r0
 124:	200001e4 	andcs	r0, r0, r4, ror #3
 128:	00000034 	andeq	r0, r0, r4, lsr r0
 12c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 130:	41018e02 	tstmi	r1, r2, lsl #28
 134:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 138:	00000007 	andeq	r0, r0, r7
 13c:	0000001c 	andeq	r0, r0, ip, lsl r0
 140:	00000000 	andeq	r0, r0, r0
 144:	20000218 	andcs	r0, r0, r8, lsl r2
 148:	00000040 	andeq	r0, r0, r0, asr #32
 14c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 150:	41018e02 	tstmi	r1, r2, lsl #28
 154:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 158:	00000007 	andeq	r0, r0, r7
 15c:	0000001c 	andeq	r0, r0, ip, lsl r0
 160:	00000000 	andeq	r0, r0, r0
 164:	20000258 	andcs	r0, r0, r8, asr r2
 168:	00000040 	andeq	r0, r0, r0, asr #32
 16c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 170:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 174:	180e4101 	stmdane	lr, {r0, r8, lr}
 178:	00070d41 	andeq	r0, r7, r1, asr #26
 17c:	0000001c 	andeq	r0, r0, ip, lsl r0
 180:	00000000 	andeq	r0, r0, r0
 184:	20000298 	mulcs	r0, r8, r2
 188:	0000003c 	andeq	r0, r0, ip, lsr r0
 18c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 190:	41018e02 	tstmi	r1, r2, lsl #28
 194:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 198:	00000007 	andeq	r0, r0, r7
 19c:	00000018 	andeq	r0, r0, r8, lsl r0
 1a0:	00000000 	andeq	r0, r0, r0
 1a4:	200002d4 	ldrdcs	r0, [r0], -r4
 1a8:	0000002e 	andeq	r0, r0, lr, lsr #32
 1ac:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1b0:	41018e02 	tstmi	r1, r2, lsl #28
 1b4:	0000070d 	andeq	r0, r0, sp, lsl #14
 1b8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1bc:	00000000 	andeq	r0, r0, r0
 1c0:	20000302 	andcs	r0, r0, r2, lsl #6
 1c4:	0000004e 	andeq	r0, r0, lr, asr #32
 1c8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1cc:	41018e02 	tstmi	r1, r2, lsl #28
 1d0:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 1d4:	00000007 	andeq	r0, r0, r7
 1d8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1dc:	00000000 	andeq	r0, r0, r0
 1e0:	20000350 	andcs	r0, r0, r0, asr r3
 1e4:	0000003a 	andeq	r0, r0, sl, lsr r0
 1e8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1ec:	41018e02 	tstmi	r1, r2, lsl #28
 1f0:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 1f4:	00000007 	andeq	r0, r0, r7
 1f8:	00000018 	andeq	r0, r0, r8, lsl r0
 1fc:	00000000 	andeq	r0, r0, r0
 200:	2000038a 	andcs	r0, r0, sl, lsl #7
 204:	00000026 	andeq	r0, r0, r6, lsr #32
 208:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 20c:	41018e02 	tstmi	r1, r2, lsl #28
 210:	0000070d 	andeq	r0, r0, sp, lsl #14
 214:	00000020 	andeq	r0, r0, r0, lsr #32
 218:	00000000 	andeq	r0, r0, r0
 21c:	200003b0 			; <UNDEFINED> instruction: 0x200003b0
 220:	00000084 	andeq	r0, r0, r4, lsl #1
 224:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 228:	87038504 	strhi	r8, [r3, -r4, lsl #10]
 22c:	41018e02 	tstmi	r1, r2, lsl #28
 230:	0d41300e 	stcleq	0, cr3, [r1, #-56]	; 0xffffffc8
 234:	00000007 	andeq	r0, r0, r7
 238:	0000000c 	andeq	r0, r0, ip
 23c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 240:	7c010001 	stcvc	0, cr0, [r1], {1}
 244:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 248:	0000000c 	andeq	r0, r0, ip
 24c:	00000238 	andeq	r0, r0, r8, lsr r2
 250:	20000439 	andcs	r0, r0, r9, lsr r4
 254:	0000010a 	andeq	r0, r0, sl, lsl #2
